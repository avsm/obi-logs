$ opam depext -iy -j 2 google-drive-ocamlfuse.0.5.10
# Detecting depexts using vars: arch=x86_64, os=linux, os-distribution=debian, os-family=debian
# The following system packages are needed:
debianutils
libcurl4-gnutls-dev
libfuse-dev
libgmp-dev
libsqlite3-dev
m4
perl
pkg-config
zlib1g-dev
The following command needs to be run through "sudo":
    apt-get install -qq -yy debianutils libcurl4-gnutls-dev libfuse-dev libgmp-dev libsqlite3-dev m4 perl pkg-config zlib1g-dev
debconf: delaying package configuration, since apt-utils is not installed
Selecting previously unselected package libpcrecpp0v5:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 17681 files and directories currently installed.)
Preparing to unpack .../00-libpcrecpp0v5_2%3a8.39-3_amd64.deb ...
Unpacking libpcrecpp0v5:amd64 (2:8.39-3) ...
Selecting previously unselected package sgml-base.
Preparing to unpack .../01-sgml-base_1.29_all.deb ...
Unpacking sgml-base (1.29) ...
Selecting previously unselected package libicu57:amd64.
Preparing to unpack .../02-libicu57_57.1-6+deb9u2_amd64.deb ...
Unpacking libicu57:amd64 (57.1-6+deb9u2) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../03-libxml2_2.9.4+dfsg1-2.2+deb9u2_amd64.deb ...
Unpacking libxml2:amd64 (2.9.4+dfsg1-2.2+deb9u2) ...
Selecting previously unselected package libcurl4-gnutls-dev:amd64.
Preparing to unpack .../04-libcurl4-gnutls-dev_7.52.1-5+deb9u6_amd64.deb ...
Unpacking libcurl4-gnutls-dev:amd64 (7.52.1-5+deb9u6) ...
Selecting previously unselected package libfuse2:amd64.
Preparing to unpack .../05-libfuse2_2.9.7-1+deb9u1_amd64.deb ...
Unpacking libfuse2:amd64 (2.9.7-1+deb9u1) ...
Selecting previously unselected package libsepol1-dev:amd64.
Preparing to unpack .../06-libsepol1-dev_2.6-2_amd64.deb ...
Unpacking libsepol1-dev:amd64 (2.6-2) ...
Selecting previously unselected package libpcre16-3:amd64.
Preparing to unpack .../07-libpcre16-3_2%3a8.39-3_amd64.deb ...
Unpacking libpcre16-3:amd64 (2:8.39-3) ...
Selecting previously unselected package libpcre32-3:amd64.
Preparing to unpack .../08-libpcre32-3_2%3a8.39-3_amd64.deb ...
Unpacking libpcre32-3:amd64 (2:8.39-3) ...
Selecting previously unselected package libpcre3-dev:amd64.
Preparing to unpack .../09-libpcre3-dev_2%3a8.39-3_amd64.deb ...
Unpacking libpcre3-dev:amd64 (2:8.39-3) ...
Selecting previously unselected package libselinux1-dev:amd64.
Preparing to unpack .../10-libselinux1-dev_2.6-3+b3_amd64.deb ...
Unpacking libselinux1-dev:amd64 (2.6-3+b3) ...
Selecting previously unselected package libfuse-dev.
Preparing to unpack .../11-libfuse-dev_2.9.7-1+deb9u1_amd64.deb ...
Unpacking libfuse-dev (2.9.7-1+deb9u1) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../12-libglib2.0-0_2.50.3-2_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.50.3-2) ...
Selecting previously unselected package libglib2.0-data.
Preparing to unpack .../13-libglib2.0-data_2.50.3-2_all.deb ...
Unpacking libglib2.0-data (2.50.3-2) ...
Selecting previously unselected package libgmpxx4ldbl:amd64.
Preparing to unpack .../14-libgmpxx4ldbl_2%3a6.1.2+dfsg-1_amd64.deb ...
Unpacking libgmpxx4ldbl:amd64 (2:6.1.2+dfsg-1) ...
Selecting previously unselected package libgmp-dev:amd64.
Preparing to unpack .../15-libgmp-dev_2%3a6.1.2+dfsg-1_amd64.deb ...
Unpacking libgmp-dev:amd64 (2:6.1.2+dfsg-1) ...
Selecting previously unselected package libsqlite3-dev:amd64.
Preparing to unpack .../16-libsqlite3-dev_3.16.2-5+deb9u1_amd64.deb ...
Unpacking libsqlite3-dev:amd64 (3.16.2-5+deb9u1) ...
Selecting previously unselected package pkg-config.
Preparing to unpack .../17-pkg-config_0.29-4+b1_amd64.deb ...
Unpacking pkg-config (0.29-4+b1) ...
Selecting previously unselected package shared-mime-info.
Preparing to unpack .../18-shared-mime-info_1.8-1+deb9u1_amd64.deb ...
Unpacking shared-mime-info (1.8-1+deb9u1) ...
Selecting previously unselected package xdg-user-dirs.
Preparing to unpack .../19-xdg-user-dirs_0.15-2+b1_amd64.deb ...
Unpacking xdg-user-dirs (0.15-2+b1) ...
Selecting previously unselected package xml-core.
Preparing to unpack .../20-xml-core_0.17_all.deb ...
Unpacking xml-core (0.17) ...
Selecting previously unselected package zlib1g-dev:amd64.
Preparing to unpack .../21-zlib1g-dev_1%3a1.2.8.dfsg-5_amd64.deb ...
Unpacking zlib1g-dev:amd64 (1:1.2.8.dfsg-5) ...
Setting up libsepol1-dev:amd64 (2.6-2) ...
Setting up libsqlite3-dev:amd64 (3.16.2-5+deb9u1) ...
Setting up libglib2.0-0:amd64 (2.50.3-2) ...
No schema files found: doing nothing.
Setting up libfuse2:amd64 (2.9.7-1+deb9u1) ...
Setting up sgml-base (1.29) ...
Setting up libicu57:amd64 (57.1-6+deb9u2) ...
Setting up libxml2:amd64 (2.9.4+dfsg1-2.2+deb9u2) ...
Setting up pkg-config (0.29-4+b1) ...
Setting up libglib2.0-data (2.50.3-2) ...
Processing triggers for libc-bin (2.24-11+deb9u3) ...
Setting up shared-mime-info (1.8-1+deb9u1) ...
Setting up libpcrecpp0v5:amd64 (2:8.39-3) ...
Setting up libpcre32-3:amd64 (2:8.39-3) ...
Setting up libpcre16-3:amd64 (2:8.39-3) ...
Setting up xml-core (0.17) ...
Setting up libgmpxx4ldbl:amd64 (2:6.1.2+dfsg-1) ...
Setting up libcurl4-gnutls-dev:amd64 (7.52.1-5+deb9u6) ...
Setting up xdg-user-dirs (0.15-2+b1) ...
Setting up zlib1g-dev:amd64 (1:1.2.8.dfsg-5) ...
Setting up libgmp-dev:amd64 (2:6.1.2+dfsg-1) ...
Setting up libpcre3-dev:amd64 (2:8.39-3) ...
Setting up libselinux1-dev:amd64 (2.6-3+b3) ...
Setting up libfuse-dev (2.9.7-1+deb9u1) ...
Processing triggers for libc-bin (2.24-11+deb9u3) ...
Processing triggers for sgml-base (1.29) ...
# OS packages installation successful
# Now letting OPAM install the packages
The following actions will be performed:
  - install camlidl                1.05       [required by google-drive-ocamlfuse]
  - install sexplib0               v0.11.0    [required by base]
  - install conf-gmp               1          [required by conf-gmp-powm-sec, zarith]
  - install easy-format            1.3.1      [required by yojson]
  - install result                 1.3        [required by topkg]
  - install conf-which             1          [required by biniou]
  - install base-bytes             base       [required by extlib, ocamlnet]
  - install conf-perl              1          [required by zarith]
  - install ocamlbuild             0.12.0     [required by google-drive-ocamlfuse]
  - install conf-pkg-config        1.1        [required by conf-sqlite3]
  - install ocamlfuse              2.7.1-cvs5 [required by google-drive-ocamlfuse]
  - install base                   v0.11.1    [required by sqlite3]
  - install conf-gmp-powm-sec      1          [required by cryptokit]
  - install biniou                 1.2.0      [required by yojson]
  - install cppo                   1.6.4      [required by extlib, yojson]
  - install zarith                 1.7        [required by cryptokit]
  - install topkg                  0.9.1      [required by xmlm]
  - install ocamlnet               4.1.6      [required by gapi-ocaml]
  - install conf-zlib              1          [required by cryptokit]
  - install conf-sqlite3           1          [required by sqlite3]
  - install conf-libcurl           1          [required by ocurl]
  - install stdio                  v0.11.0    [required by sqlite3]
  - install yojson                 1.4.1      [required by gapi-ocaml]
  - install extlib                 1.7.5      [required by gapi-ocaml]
  - install xmlm                   1.3.0      [required by gapi-ocaml]
  - install cryptokit              1.13       [required by gapi-ocaml]
  - install ocurl                  0.8.2      [required by gapi-ocaml]
  - install configurator           v0.11.0    [required by sqlite3]
  - install gapi-ocaml             0.3.6      [required by google-drive-ocamlfuse]
  - install sqlite3                4.4.0      [required by google-drive-ocamlfuse]
  - install google-drive-ocamlfuse 0.5.10
===== 31 to install =====

<><> Gathering sources ><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
[base.v0.11.1] found in cache
[biniou.1.2.0] found in cache
[camlidl.1.05] found in cache
[configurator.v0.11.0] found in cache
[cppo.1.6.4] found in cache
[cryptokit.1.13] found in cache
[easy-format.1.3.1] found in cache
[extlib.1.7.5] found in cache
[gapi-ocaml.0.3.6] found in cache
[google-drive-ocamlfuse.0.5.10] found in cache
[ocamlbuild.0.12.0] found in cache
[ocamlfuse.2.7.1-cvs5] found in cache
[ocamlnet.4.1.6] found in cache
[ocurl.0.8.2] found in cache
[result.1.3] found in cache
[sexplib0.v0.11.0] found in cache
[sqlite3.4.4.0] found in cache
[stdio.v0.11.0] found in cache
[topkg.0.9.1] found in cache
[xmlm.1.3.0] found in cache
[yojson.1.4.1] found in cache
[zarith.1.7] found in cache

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
[ERROR] The compilation of ocamlbuild failed at "/usr/bin/make check-if-preinstalled all opam-install".
-> installed base-bytes.base
-> installed camlidl.1.05
-> installed conf-gmp.1
-> installed conf-gmp-powm-sec.1
-> installed conf-perl.1
-> installed conf-pkg-config.1.1
-> installed conf-libcurl.1
-> installed conf-sqlite3.1
-> installed conf-which.1
-> installed conf-zlib.1
-> installed cppo.1.6.4
-> installed easy-format.1.3.1
-> installed biniou.1.2.0
-> installed extlib.1.7.5
-> installed ocamlfuse.2.7.1-cvs5
-> installed result.1.3
-> installed sexplib0.v0.11.0
[ERROR] The compilation of base failed at "/home/opam/.opam/4.08/bin/jbuilder build -p base -j 71".
-> installed yojson.1.4.1
-> installed zarith.1.7
-> installed ocurl.0.8.2

#=== ERROR while compiling ocamlbuild.0.12.0 ==================================#
# context              2.0.0 | linux/x86_64 | ocaml-variants.4.08.0+trunk | git+file:///home/opam/opam-repository
# path                 ~/.opam/4.08/.opam-switch/build/ocamlbuild.0.12.0
# command              /usr/bin/make check-if-preinstalled all opam-install
# exit-code            2
# env-file             ~/.opam/log/ocamlbuild-11-8a5d98.env
# output-file          ~/.opam/log/ocamlbuild-11-8a5d98.out
### output ###
# if test -d /home/opam/.opam/4.08/lib/ocaml/ocamlbuild; then\
#   >&2 echo "ERROR: Preinstalled ocamlbuild detected at"\
#        "/home/opam/.opam/4.08/lib/ocaml/ocamlbuild";\
#   >&2 echo "Installation aborted; if you want to bypass this"\
#         "safety check, pass CHECK_IF_PREINSTALLED=false to make";\
#   exit 2;\
# fi
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/const.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/loc.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/loc.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/discard_printf.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/discard_printf.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/signatures.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/my_std.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/my_std.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/my_unix.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/my_unix.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/tags.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/tags.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/display.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/display.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/log.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/log.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/shell.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/shell.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/bool.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/bool.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/glob_ast.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/glob_ast.ml
# ocamllex.opt src/glob_lexer.mll
# 55 states, 419 transitions, table size 2006 bytes
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/glob_lexer.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/glob_lexer.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/glob.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/glob.ml
# ocamllex.opt src/lexers.mll
# 251 states, 1051 transitions, table size 5710 bytes
# 4334 additional bytes used for bindings
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/lexers.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/lexers.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/param_tags.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/param_tags.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/command.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/command.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/ocamlbuild_config.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/ocamlbuild_where.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/ocamlbuild_where.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/slurp.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/slurp.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/options.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/options.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/pathname.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/pathname.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/configuration.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/configuration.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/flags.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/flags.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/hygiene.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/hygiene.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/digest_cache.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/digest_cache.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/resource.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/resource.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/rule.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/rule.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/solver.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/solver.ml
# File "src/solver.ml", line 43, characters 31-32:
# Error: This expression has type int but an expression was expected of type
#          ('a -> 'b -> 'c -> 'd -> 'e -> 'f, Format.formatter, unit,
#           Format.formatter -> unit)
#          format4 =
#            ('a -> 'b -> 'c -> 'd -> 'e -> 'f, Format.formatter, unit, 
#             unit, unit, Format.formatter -> unit)
#            CamlinternalFormatBasics.format6
# Makefile:422: recipe for target 'src/solver.cmo' failed
# make: *** [src/solver.cmo] Error 2


#=== ERROR while compiling base.v0.11.1 =======================================#
# context              2.0.0 | linux/x86_64 | ocaml-variants.4.08.0+trunk | git+file:///home/opam/opam-repository
# path                 ~/.opam/4.08/.opam-switch/build/base.v0.11.1
# command              ~/.opam/4.08/bin/jbuilder build -p base -j 71
# exit-code            1
# env-file             ~/.opam/log/base-11-bbce2a.env
# output-file          ~/.opam/log/base-11-bbce2a.out
### output ###
#       ocamlc shadow-stdlib/src/.shadow_stdlib.objs/shadow_stdlib.{cmi,cmti}
# File "shadow-stdlib/src/shadow_stdlib.mli", line 35, characters 0-279:
# Warning 53: the "deprecated" attribute cannot appear in this context
# File "shadow-stdlib/src/shadow_stdlib.mli", line 1399, characters 0-401:
# Warning 53: the "deprecated" attribute cannot appear in this context
#       ocamlc src/.base.objs/base__Ordered_collection_common.{cmi,cmti}
# File "src/ordered_collection_common.mli", line 28, characters 80-88:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Container_intf.{cmi,cmo,cmt}
# File "src/container_intf.ml", line 47, characters 40-48:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 48, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 118, characters 40-48:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 119, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 188, characters 39-47:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 189, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 256, characters 39-47:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 257, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 319, characters 43-51:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 320, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 353, characters 43-51:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 354, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 446, characters 31-39:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 448, characters 16-24:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Ordered_collection_common.{cmo,cmt}
# File "src/ordered_collection_common.ml", line 37, characters 6-15:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/ordered_collection_common.ml", line 38, characters 29-41:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Or_error.{cmi,cmti}
# File "src/or_error.mli", line 12, characters 26-34:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.mli", line 62, characters 30-38:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Container.{cmo,cmt}
# File "src/container.ml", line 23, characters 4-13:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container.ml", line 25, characters 8-17:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Validate.{cmi,cmti}
# File "src/validate.mli", line 140, characters 38-46:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Or_error.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Or_error.cmo -c -impl src/or_error.ml)
# File "src/or_error.ml", line 3, characters 26-34:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 7, characters 18-32:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 16, characters 14-32:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 16, characters 14-32:
# Error: Unbound value Result.hash_fold_t
#       ocamlc src/.base.objs/base__Float0.{cmi,cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -no-alias-deps -open Base__ -o src/.base.objs/base__Float0.cmo -c -impl src/float0.ml)
# File "src/float0.ml", line 31, characters 2-18:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/float0.ml", line 31, characters 2-18:
# Error: Unbound value Option.value_exn
#       ocamlc src/.base.objs/base__Option_array.{cmi,cmti}
# File "src/option_array.mli", line 94, characters 31-39:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/option_array.mli", line 95, characters 23-31:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
#       ocamlc src/.base.objs/base__Option_array.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Option_array.cmo -c -impl src/option_array.ml)
# File "src/option_array.ml", line 99, characters 32-38:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/option_array.ml", line 99, characters 32-38:
# Error: Signature mismatch:
#        ...
#        The value `sexp_of_t' is required but not provided
#        File "src/sexpable.mli", line 21, characters 4-94:
#          Expected declaration
#        The value `t_of_sexp' is required but not provided
#        File "src/sexpable.mli", line 19, characters 4-94:
#          Expected declaration
#       ocamlc src/.base.objs/base__Either.{cmo,cmt}
# File "src/either.ml", line 231, characters 37-48:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
#       ocamlc src/.base.objs/base__Array.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Array.cmo -c -impl src/array.ml)
# File "src/array.ml", line 523, characters 16-26:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/array.ml", line 523, characters 61-79:
# Error: The function applied to this argument has type 'a option -> 'b option
# This argument cannot be applied with label ~f
#       ocamlc src/.base.objs/base__Sequence.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Sequence.cmo -c -impl src/sequence.ml)
# File "src/sequence.ml", line 977, characters 18-31:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/sequence.ml", line 977, characters 18-31:
# Error: Unbound value Result.return
#       ocamlc src/.base.objs/base__Int_conversions.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Int_conversions.cmo -c -impl src/int_conversions.ml)
# File "src/int_conversions.ml", line 345, characters 12-27:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/int_conversions.ml", line 345, characters 12-27:
# Error: Unbound value Option.try_with
#       ocamlc src/.base.objs/base__Type_equal.{cmo,cmt}
# File "src/type_equal.ml", line 179, characters 19-33:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
#       ocamlc src/.base.objs/base__Hash_set.{cmo,cmt}
# File "src/hash_set.ml", line 41, characters 6-15:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/hash_set.ml", line 52, characters 6-15:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Hashtbl.{cmo,cmt}
# File "src/hashtbl.ml", line 373, characters 5-19:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/hashtbl.ml", line 391, characters 17-29:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/hashtbl.ml", line 476, characters 13-22:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/hashtbl.ml", line 484, characters 4-13:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/hashtbl.ml", line 485, characters 4-16:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/hashtbl.ml", line 536, characters 13-22:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Map.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Map.cmo -c -impl src/map.ml)
# File "src/map.ml", line 129, characters 22-31:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/map.ml", line 144, characters 8-17:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/map.ml", line 414, characters 23-35:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/map.ml", line 431, characters 29-43:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/map.ml", line 925, characters 14-25:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/map.ml", line 926, characters 75-76:
# Error: This expression has type
#          none:(init:'a -> f:(('b, 'c) t -> 'b -> ('b, 'c) t) -> 'd) ->
#          some:('e -> init:'a -> f:(('b, 'c) t -> 'b -> ('b, 'c) t) -> 'd) ->
#          'd
#        but an expression was expected of type ('b, 'f) t
#     ocamlopt src/.base.objs/base__Ordered_collection_common.{cmx,o}
# File "src/ordered_collection_common.ml", line 37, characters 6-15:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/ordered_collection_common.ml", line 38, characters 29-41:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Set_intf.{cmi,cmo,cmt}
# File "src/set_intf.ml", line 1001, characters 39-47:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/set_intf.ml", line 1002, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#     ocamlopt src/.base.objs/base__Container_intf.{cmx,o}
# File "src/container_intf.ml", line 47, characters 40-48:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 48, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 118, characters 40-48:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 119, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 188, characters 39-47:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 189, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 256, characters 39-47:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 257, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 319, characters 43-51:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 320, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 353, characters 43-51:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 354, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 446, characters 31-39:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 448, characters 16-24:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#     ocamlopt src/.base.objs/base__Container.{cmx,o}
# File "src/container.ml", line 23, characters 4-13:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container.ml", line 25, characters 8-17:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Set.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Set.cmo -c -impl src/set.ml)
# File "src/set.ml", line 135, characters 22-31:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/set.ml", line 150, characters 8-17:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/set.ml", line 630, characters 14-25:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/set.ml", line 631, characters 70-71:
# Error: This expression has type
#          none:(init:'a -> f:('b t -> 'b -> 'b t) -> 'c) ->
#          some:('d -> init:'a -> f:('b t -> 'b -> 'b t) -> 'c) -> 'c
#        but an expression was expected of type 'b t
#     ocamlopt src/.base.objs/base__Sequence.{cmx,o} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlopt.opt -w -40 -safe-string -g -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Sequence.cmx -c -impl src/sequence.ml)
# File "src/sequence.ml", line 977, characters 18-31:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/sequence.ml", line 977, characters 18-31:
# Error: Unbound value Result.return
#       ocamlc src/.base.objs/base__String.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__String.cmo -c -impl src/string.ml)
# File "src/string.ml", line 349, characters 2-16:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/string.ml", line 1152, characters 4-14:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/string.ml", line 1152, characters 46-71:
# Error: The function applied to this argument has type 'a option -> 'b option
# This argument cannot be applied with label ~f
#     ocamlopt src/.base.objs/base__Or_error.{cmx,o} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlopt.opt -w -40 -safe-string -g -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Or_error.cmx -c -impl src/or_error.ml)
# File "src/or_error.ml", line 3, characters 26-34:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 7, characters 18-32:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 16, characters 14-32:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 16, characters 14-32:
# Error: Unbound value Result.hash_fold_t



<><> Error report <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
+- The following actions failed
| - build base       v0.11.1
| - build ocamlbuild 0.12.0
+- 
+- The following changes have been performed (the rest was aborted)
| - install base-bytes        base
| - install biniou            1.2.0
| - install camlidl           1.05
| - install conf-gmp          1
| - install conf-gmp-powm-sec 1
| - install conf-libcurl      1
| - install conf-perl         1
| - install conf-pkg-config   1.1
| - install conf-sqlite3      1
| - install conf-which        1
| - install conf-zlib         1
| - install cppo              1.6.4
| - install easy-format       1.3.1
| - install extlib            1.7.5
| - install ocamlfuse         2.7.1-cvs5
| - install ocurl             0.8.2
| - install result            1.3
| - install sexplib0          v0.11.0
| - install yojson            1.4.1
| - install zarith            1.7
+- 
# Run eval $(opam env) to update the current shell environment

The former state can be restored with:
    opam switch import "/home/opam/.opam/4.08/.opam-switch/backup/state-20180811215014.export"
31 1534024197 1534024255