$ opam depext -iy -j 2 gammu.0.9.4
# Detecting depexts using vars: arch=x86_64, os=linux, os-distribution=debian, os-family=debian
# The following system packages are needed:
libgammu-dev
pkg-config
The following command needs to be run through "sudo":
    apt-get install -qq -yy libgammu-dev pkg-config
debconf: delaying package configuration, since apt-utils is not installed
Selecting previously unselected package libkmod2:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 17681 files and directories currently installed.)
Preparing to unpack .../00-libkmod2_23-2_amd64.deb ...
Unpacking libkmod2:amd64 (23-2) ...
Selecting previously unselected package libprocps6:amd64.
Preparing to unpack .../01-libprocps6_2%3a3.3.12-3+deb9u1_amd64.deb ...
Unpacking libprocps6:amd64 (2:3.3.12-3+deb9u1) ...
Selecting previously unselected package procps.
Preparing to unpack .../02-procps_2%3a3.3.12-3+deb9u1_amd64.deb ...
Unpacking procps (2:3.3.12-3+deb9u1) ...
Selecting previously unselected package udev.
Preparing to unpack .../03-udev_232-25+deb9u4_amd64.deb ...
Unpacking udev (232-25+deb9u4) ...
Selecting previously unselected package sgml-base.
Preparing to unpack .../04-sgml-base_1.29_all.deb ...
Unpacking sgml-base (1.29) ...
Selecting previously unselected package libicu57:amd64.
Preparing to unpack .../05-libicu57_57.1-6+deb9u2_amd64.deb ...
Unpacking libicu57:amd64 (57.1-6+deb9u2) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../06-libxml2_2.9.4+dfsg1-2.2+deb9u2_amd64.deb ...
Unpacking libxml2:amd64 (2.9.4+dfsg1-2.2+deb9u2) ...
Selecting previously unselected package libbluetooth3:amd64.
Preparing to unpack .../07-libbluetooth3_5.43-2+deb9u1_amd64.deb ...
Unpacking libbluetooth3:amd64 (5.43-2+deb9u1) ...
Selecting previously unselected package libdbi1:amd64.
Preparing to unpack .../08-libdbi1_0.9.0-4+deb9u1_amd64.deb ...
Unpacking libdbi1:amd64 (0.9.0-4+deb9u1) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../09-libglib2.0-0_2.50.3-2_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.50.3-2) ...
Selecting previously unselected package libusb-1.0-0:amd64.
Preparing to unpack .../10-libusb-1.0-0_2%3a1.0.21-1_amd64.deb ...
Unpacking libusb-1.0-0:amd64 (2:1.0.21-1) ...
Selecting previously unselected package libgammu8.
Preparing to unpack .../11-libgammu8_1.38.1-1_amd64.deb ...
Unpacking libgammu8 (1.38.1-1) ...
Selecting previously unselected package mysql-common.
Preparing to unpack .../12-mysql-common_5.8+1.0.2_all.deb ...
Unpacking mysql-common (5.8+1.0.2) ...
Selecting previously unselected package libmariadbclient18:amd64.
Preparing to unpack .../13-libmariadbclient18_10.1.26-0+deb9u1_amd64.deb ...
Unpacking libmariadbclient18:amd64 (10.1.26-0+deb9u1) ...
Selecting previously unselected package libltdl7:amd64.
Preparing to unpack .../14-libltdl7_2.4.6-2_amd64.deb ...
Unpacking libltdl7:amd64 (2.4.6-2) ...
Selecting previously unselected package libodbc1:amd64.
Preparing to unpack .../15-libodbc1_2.3.4-1_amd64.deb ...
Unpacking libodbc1:amd64 (2.3.4-1) ...
Selecting previously unselected package libpq5:amd64.
Preparing to unpack .../16-libpq5_9.6.10-0+deb9u1_amd64.deb ...
Unpacking libpq5:amd64 (9.6.10-0+deb9u1) ...
Selecting previously unselected package libgsmsd8.
Preparing to unpack .../17-libgsmsd8_1.38.1-1_amd64.deb ...
Unpacking libgsmsd8 (1.38.1-1) ...
Selecting previously unselected package libgammu-dev.
Preparing to unpack .../18-libgammu-dev_1.38.1-1_amd64.deb ...
Unpacking libgammu-dev (1.38.1-1) ...
Selecting previously unselected package libgammu-i18n.
Preparing to unpack .../19-libgammu-i18n_1.38.1-1_all.deb ...
Unpacking libgammu-i18n (1.38.1-1) ...
Selecting previously unselected package libglib2.0-data.
Preparing to unpack .../20-libglib2.0-data_2.50.3-2_all.deb ...
Unpacking libglib2.0-data (2.50.3-2) ...
Selecting previously unselected package pkg-config.
Preparing to unpack .../21-pkg-config_0.29-4+b1_amd64.deb ...
Unpacking pkg-config (0.29-4+b1) ...
Selecting previously unselected package psmisc.
Preparing to unpack .../22-psmisc_22.21-2.1+b2_amd64.deb ...
Unpacking psmisc (22.21-2.1+b2) ...
Selecting previously unselected package shared-mime-info.
Preparing to unpack .../23-shared-mime-info_1.8-1+deb9u1_amd64.deb ...
Unpacking shared-mime-info (1.8-1+deb9u1) ...
Selecting previously unselected package xdg-user-dirs.
Preparing to unpack .../24-xdg-user-dirs_0.15-2+b1_amd64.deb ...
Unpacking xdg-user-dirs (0.15-2+b1) ...
Selecting previously unselected package xml-core.
Preparing to unpack .../25-xml-core_0.17_all.deb ...
Unpacking xml-core (0.17) ...
Selecting previously unselected package libjim0.76:amd64.
Preparing to unpack .../26-libjim0.76_0.76-2+b1_amd64.deb ...
Unpacking libjim0.76:amd64 (0.76-2+b1) ...
Selecting previously unselected package usb-modeswitch-data.
Preparing to unpack .../27-usb-modeswitch-data_20170120-1_all.deb ...
Unpacking usb-modeswitch-data (20170120-1) ...
Selecting previously unselected package usb-modeswitch.
Preparing to unpack .../28-usb-modeswitch_2.5.0+repack0-1_amd64.deb ...
Unpacking usb-modeswitch (2.5.0+repack0-1) ...
Setting up libdbi1:amd64 (0.9.0-4+deb9u1) ...
Setting up psmisc (22.21-2.1+b2) ...
Setting up libjim0.76:amd64 (0.76-2+b1) ...
Setting up libgammu-i18n (1.38.1-1) ...
Setting up libglib2.0-0:amd64 (2.50.3-2) ...
No schema files found: doing nothing.
Setting up mysql-common (5.8+1.0.2) ...
update-alternatives: using /etc/mysql/my.cnf.fallback to provide /etc/mysql/my.cnf (my.cnf) in auto mode
Setting up libbluetooth3:amd64 (5.43-2+deb9u1) ...
Setting up libmariadbclient18:amd64 (10.1.26-0+deb9u1) ...
Setting up sgml-base (1.29) ...
Setting up libicu57:amd64 (57.1-6+deb9u2) ...
Setting up libprocps6:amd64 (2:3.3.12-3+deb9u1) ...
Setting up libkmod2:amd64 (23-2) ...
Setting up libxml2:amd64 (2.9.4+dfsg1-2.2+deb9u2) ...
Setting up procps (2:3.3.12-3+deb9u1) ...
update-alternatives: using /usr/bin/w.procps to provide /usr/bin/w (w) in auto mode
Setting up usb-modeswitch-data (20170120-1) ...
Setting up pkg-config (0.29-4+b1) ...
Setting up libglib2.0-data (2.50.3-2) ...
Setting up libpq5:amd64 (9.6.10-0+deb9u1) ...
Setting up libusb-1.0-0:amd64 (2:1.0.21-1) ...
Processing triggers for libc-bin (2.24-11+deb9u3) ...
Setting up udev (232-25+deb9u4) ...
Adding group `input' (GID 102) ...
Done.
invoke-rc.d: could not determine current runlevel
invoke-rc.d: policy-rc.d denied execution of start.
Setting up libltdl7:amd64 (2.4.6-2) ...
Setting up shared-mime-info (1.8-1+deb9u1) ...
Setting up xml-core (0.17) ...
Setting up xdg-user-dirs (0.15-2+b1) ...
Setting up libgammu8 (1.38.1-1) ...
Setting up libodbc1:amd64 (2.3.4-1) ...
Setting up usb-modeswitch (2.5.0+repack0-1) ...
Setting up libgsmsd8 (1.38.1-1) ...
Setting up libgammu-dev (1.38.1-1) ...
Processing triggers for libc-bin (2.24-11+deb9u3) ...
Processing triggers for sgml-base (1.29) ...
# OS packages installation successful
# Now letting OPAM install the packages
The following actions will be performed:
  - install sexplib0        v0.11.0 [required by base]
  - install conf-pkg-config 1.1     [required by gammu]
  - install base            v0.11.1 [required by gammu]
  - install stdio           v0.11.0 [required by gammu]
  - install configurator    v0.11.0 [required by gammu]
  - install gammu           0.9.4
===== 6 to install =====

<><> Gathering sources ><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
[base.v0.11.1] found in cache
[configurator.v0.11.0] found in cache
[gammu.0.9.4] found in cache
[sexplib0.v0.11.0] found in cache
[stdio.v0.11.0] found in cache

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> installed conf-pkg-config.1.1
-> installed sexplib0.v0.11.0
[ERROR] The compilation of base failed at "/home/opam/.opam/4.08/bin/jbuilder build -p base -j 71".

#=== ERROR while compiling base.v0.11.1 =======================================#
# context              2.0.0 | linux/x86_64 | ocaml-variants.4.08.0+trunk | git+file:///home/opam/opam-repository
# path                 ~/.opam/4.08/.opam-switch/build/base.v0.11.1
# command              ~/.opam/4.08/bin/jbuilder build -p base -j 71
# exit-code            1
# env-file             ~/.opam/log/base-11-06fa5f.env
# output-file          ~/.opam/log/base-11-06fa5f.out
### output ###
#       ocamlc shadow-stdlib/src/.shadow_stdlib.objs/shadow_stdlib.{cmi,cmti}
# File "shadow-stdlib/src/shadow_stdlib.mli", line 28, characters 0-279:
# Warning 53: the "deprecated" attribute cannot appear in this context
# File "shadow-stdlib/src/shadow_stdlib.mli", line 1399, characters 0-401:
# Warning 53: the "deprecated" attribute cannot appear in this context
#       ocamlc src/.base.objs/base__Import0.{cmi,cmo,cmt}
# File "src/import0.ml", line 7, characters 6-394:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/import0.ml", line 126, characters 22-37:
# Warning 3: deprecated: module Caml.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/import0.ml", line 128, characters 10-25:
# Warning 3: deprecated: module Caml.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/import0.ml", line 172, characters 12-26:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/import0.ml", line 173, characters 12-26:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#     ocamlopt src/.base.objs/base__Import0.{cmx,o}
# File "src/import0.ml", line 7, characters 6-394:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/import0.ml", line 126, characters 22-37:
# Warning 3: deprecated: module Caml.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/import0.ml", line 128, characters 10-25:
# Warning 3: deprecated: module Caml.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/import0.ml", line 172, characters 12-26:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/import0.ml", line 173, characters 12-26:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#       ocamlc src/.base.objs/base__Comparator.{cmo,cmt}
# File "src/comparator.ml", line 67, characters 20-38:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#       ocamlc src/.base.objs/base__Exn.{cmo,cmt}
# File "src/exn.ml", line 120, characters 28-49:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#       ocamlc src/.base.objs/base__Result.{cmi,cmti}
# File "src/result.mli", line 19, characters 33-50:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#       ocamlc src/.base.objs/base__Ordered_collection_common.{cmi,cmti}
# File "src/ordered_collection_common.mli", line 28, characters 80-88:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Result.{cmo,cmt}
# File "src/result.ml", line 3, characters 27-44:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#       ocamlc src/.base.objs/base__Ordered_collection_common.{cmo,cmt}
# File "src/ordered_collection_common.ml", line 37, characters 6-15:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/ordered_collection_common.ml", line 38, characters 29-41:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Container_intf.{cmi,cmo,cmt}
# File "src/container_intf.ml", line 47, characters 40-48:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 48, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 118, characters 40-48:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 119, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 188, characters 39-47:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 189, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 256, characters 39-47:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 257, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 319, characters 43-51:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 320, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 353, characters 43-51:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 354, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 446, characters 31-39:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 448, characters 16-24:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Or_error.{cmi,cmti}
# File "src/or_error.mli", line 12, characters 26-34:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.mli", line 62, characters 30-38:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Container.{cmo,cmt}
# File "src/container.ml", line 23, characters 4-13:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container.ml", line 25, characters 8-17:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Validate.{cmi,cmti}
# File "src/validate.mli", line 140, characters 38-46:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Or_error.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Or_error.cmo -c -impl src/or_error.ml)
# File "src/or_error.ml", line 3, characters 26-34:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 7, characters 18-32:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 16, characters 14-32:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 16, characters 14-32:
# Error: Unbound value Result.hash_fold_t
#       ocamlc src/.base.objs/base__Float0.{cmi,cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -no-alias-deps -open Base__ -o src/.base.objs/base__Float0.cmo -c -impl src/float0.ml)
# File "src/float0.ml", line 31, characters 2-18:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/float0.ml", line 31, characters 2-18:
# Error: Unbound value Option.value_exn
#       ocamlc src/.base.objs/base__Option_array.{cmi,cmti}
# File "src/option_array.mli", line 94, characters 31-39:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/option_array.mli", line 95, characters 23-31:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
#       ocamlc src/.base.objs/base__Either.{cmo,cmt}
# File "src/either.ml", line 231, characters 37-48:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
#       ocamlc src/.base.objs/base__Sequence.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Sequence.cmo -c -impl src/sequence.ml)
# File "src/sequence.ml", line 977, characters 18-31:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/sequence.ml", line 977, characters 18-31:
# Error: Unbound value Result.return
#       ocamlc src/.base.objs/base__Option_array.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Option_array.cmo -c -impl src/option_array.ml)
# File "src/option_array.ml", line 99, characters 32-38:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/option_array.ml", line 99, characters 32-38:
# Error: Signature mismatch:
#        ...
#        The value `sexp_of_t' is required but not provided
#        File "src/sexpable.mli", line 21, characters 4-94:
#          Expected declaration
#        The value `t_of_sexp' is required but not provided
#        File "src/sexpable.mli", line 19, characters 4-94:
#          Expected declaration
#     ocamlopt src/.base.objs/base__Comparator.{cmx,o}
# File "src/comparator.ml", line 67, characters 20-38:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#       ocamlc src/.base.objs/base__Array.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Array.cmo -c -impl src/array.ml)
# File "src/array.ml", line 523, characters 16-26:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/array.ml", line 523, characters 61-79:
# Error: The function applied to this argument has type 'a option -> 'b option
# This argument cannot be applied with label ~f
#       ocamlc src/.base.objs/base__Bool.{cmo,cmt}
# File "src/bool.ml", line 62, characters 10-24:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/bool.ml", line 63, characters 10-24:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#     ocamlopt src/.base.objs/base__Exn.{cmx,o}
# File "src/exn.ml", line 120, characters 28-49:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#       ocamlc src/.base.objs/base__Int_conversions.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Int_conversions.cmo -c -impl src/int_conversions.ml)
# File "src/int_conversions.ml", line 345, characters 12-27:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/int_conversions.ml", line 345, characters 12-27:
# Error: Unbound value Option.try_with
#     ocamlopt src/.base.objs/base__Result.{cmx,o}
# File "src/result.ml", line 3, characters 27-44:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#       ocamlc src/.base.objs/base__Hash_set.{cmo,cmt}
# File "src/hash_set.ml", line 41, characters 6-15:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/hash_set.ml", line 52, characters 6-15:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Type_equal.{cmo,cmt}
# File "src/type_equal.ml", line 179, characters 19-33:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
#     ocamlopt src/.base.objs/base__Ordered_collection_common.{cmx,o}
# File "src/ordered_collection_common.ml", line 37, characters 6-15:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/ordered_collection_common.ml", line 38, characters 29-41:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#     ocamlopt src/.base.objs/base__Container_intf.{cmx,o}
# File "src/container_intf.ml", line 47, characters 40-48:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 48, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 118, characters 40-48:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 119, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 188, characters 39-47:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 189, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 256, characters 39-47:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 257, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 319, characters 43-51:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 320, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 353, characters 43-51:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 354, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 446, characters 31-39:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 448, characters 16-24:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Hashtbl.{cmo,cmt}
# File "src/hashtbl.ml", line 373, characters 5-19:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/hashtbl.ml", line 391, characters 17-29:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/hashtbl.ml", line 476, characters 13-22:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/hashtbl.ml", line 484, characters 4-13:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/hashtbl.ml", line 485, characters 4-16:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/hashtbl.ml", line 536, characters 13-22:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#     ocamlopt src/.base.objs/base__Container.{cmx,o}
# File "src/container.ml", line 23, characters 4-13:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container.ml", line 25, characters 8-17:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#     ocamlopt src/.base.objs/base__Sequence.{cmx,o} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlopt.opt -w -40 -safe-string -g -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Sequence.cmx -c -impl src/sequence.ml)
# File "src/sequence.ml", line 977, characters 18-31:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/sequence.ml", line 977, characters 18-31:
# Error: Unbound value Result.return
#       ocamlc src/.base.objs/base__Map.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Map.cmo -c -impl src/map.ml)
# File "src/map.ml", line 129, characters 22-31:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/map.ml", line 141, characters 15-30:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/map.ml", line 144, characters 8-17:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/map.ml", line 414, characters 23-35:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/map.ml", line 431, characters 29-43:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/map.ml", line 802, characters 15-30:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/map.ml", line 817, characters 17-32:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/map.ml", line 868, characters 17-32:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/map.ml", line 925, characters 14-25:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/map.ml", line 926, characters 75-76:
# Error: This expression has type
#          none:(init:'a -> f:(('b, 'c) t -> 'b -> ('b, 'c) t) -> 'd) ->
#          some:('e -> init:'a -> f:(('b, 'c) t -> 'b -> ('b, 'c) t) -> 'd) ->
#          'd
#        but an expression was expected of type ('b, 'f) t
#       ocamlc src/.base.objs/base__Set_intf.{cmi,cmo,cmt}
# File "src/set_intf.ml", line 1001, characters 39-47:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/set_intf.ml", line 1002, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Set.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Set.cmo -c -impl src/set.ml)
# File "src/set.ml", line 135, characters 22-31:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/set.ml", line 147, characters 15-30:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/set.ml", line 150, characters 8-17:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/set.ml", line 400, characters 16-34:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/set.ml", line 574, characters 17-32:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/set.ml", line 630, characters 14-25:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/set.ml", line 631, characters 70-71:
# Error: This expression has type
#          none:(init:'a -> f:('b t -> 'b -> 'b t) -> 'c) ->
#          some:('d -> init:'a -> f:('b t -> 'b -> 'b t) -> 'c) -> 'c
#        but an expression was expected of type 'b t
#       ocamlc src/.base.objs/base__String.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__String.cmo -c -impl src/string.ml)
# File "src/string.ml", line 349, characters 2-16:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/string.ml", line 1152, characters 4-14:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/string.ml", line 1152, characters 46-71:
# Error: The function applied to this argument has type 'a option -> 'b option
# This argument cannot be applied with label ~f
#     ocamlopt src/.base.objs/base__Or_error.{cmx,o} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlopt.opt -w -40 -safe-string -g -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Or_error.cmx -c -impl src/or_error.ml)
# File "src/or_error.ml", line 3, characters 26-34:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 7, characters 18-32:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 16, characters 14-32:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 16, characters 14-32:
# Error: Unbound value Result.hash_fold_t



<><> Error report <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
+- The following actions failed
| - build base v0.11.1
+- 
+- The following changes have been performed (the rest was aborted)
| - install conf-pkg-config 1.1
| - install sexplib0        v0.11.0
+- 
# Run eval $(opam env) to update the current shell environment

The former state can be restored with:
    opam switch import "/home/opam/.opam/4.08/.opam-switch/backup/state-20180901232219.export"
31 1535844127 1535844145