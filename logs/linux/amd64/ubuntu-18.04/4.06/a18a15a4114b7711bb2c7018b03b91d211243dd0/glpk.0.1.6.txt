$ opam depext -iy -j 2 glpk.0.1.6
# Detecting depexts using vars: arch=x86_64, os=linux, os-distribution=ubuntu, os-family=debian
# The following system packages are needed:
libglpk-dev
m4
The following command needs to be run through "sudo":
    apt-get install -qq -yy libglpk-dev m4
debconf: delaying package configuration, since apt-utils is not installed
Selecting previously unselected package libsuitesparseconfig5:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 15325 files and directories currently installed.)
Preparing to unpack .../00-libsuitesparseconfig5_1%3a5.1.2-2_amd64.deb ...
Unpacking libsuitesparseconfig5:amd64 (1:5.1.2-2) ...
Selecting previously unselected package libamd2:amd64.
Preparing to unpack .../01-libamd2_1%3a5.1.2-2_amd64.deb ...
Unpacking libamd2:amd64 (1:5.1.2-2) ...
Selecting previously unselected package libblas3:amd64.
Preparing to unpack .../02-libblas3_3.7.1-4ubuntu1_amd64.deb ...
Unpacking libblas3:amd64 (3.7.1-4ubuntu1) ...
Selecting previously unselected package libblas-dev:amd64.
Preparing to unpack .../03-libblas-dev_3.7.1-4ubuntu1_amd64.deb ...
Unpacking libblas-dev:amd64 (3.7.1-4ubuntu1) ...
Selecting previously unselected package libbtf1:amd64.
Preparing to unpack .../04-libbtf1_1%3a5.1.2-2_amd64.deb ...
Unpacking libbtf1:amd64 (1:5.1.2-2) ...
Selecting previously unselected package libcamd2:amd64.
Preparing to unpack .../05-libcamd2_1%3a5.1.2-2_amd64.deb ...
Unpacking libcamd2:amd64 (1:5.1.2-2) ...
Selecting previously unselected package libccolamd2:amd64.
Preparing to unpack .../06-libccolamd2_1%3a5.1.2-2_amd64.deb ...
Unpacking libccolamd2:amd64 (1:5.1.2-2) ...
Selecting previously unselected package libcolamd2:amd64.
Preparing to unpack .../07-libcolamd2_1%3a5.1.2-2_amd64.deb ...
Unpacking libcolamd2:amd64 (1:5.1.2-2) ...
Selecting previously unselected package libgfortran4:amd64.
Preparing to unpack .../08-libgfortran4_7.3.0-16ubuntu3_amd64.deb ...
Unpacking libgfortran4:amd64 (7.3.0-16ubuntu3) ...
Selecting previously unselected package liblapack3:amd64.
Preparing to unpack .../09-liblapack3_3.7.1-4ubuntu1_amd64.deb ...
Unpacking liblapack3:amd64 (3.7.1-4ubuntu1) ...
Selecting previously unselected package libmetis5:amd64.
Preparing to unpack .../10-libmetis5_5.1.0.dfsg-5_amd64.deb ...
Unpacking libmetis5:amd64 (5.1.0.dfsg-5) ...
Selecting previously unselected package libcholmod3:amd64.
Preparing to unpack .../11-libcholmod3_1%3a5.1.2-2_amd64.deb ...
Unpacking libcholmod3:amd64 (1:5.1.2-2) ...
Selecting previously unselected package libcxsparse3:amd64.
Preparing to unpack .../12-libcxsparse3_1%3a5.1.2-2_amd64.deb ...
Unpacking libcxsparse3:amd64 (1:5.1.2-2) ...
Selecting previously unselected package libltdl7:amd64.
Preparing to unpack .../13-libltdl7_2.4.6-2_amd64.deb ...
Unpacking libltdl7:amd64 (2.4.6-2) ...
Selecting previously unselected package libglpk40:amd64.
Preparing to unpack .../14-libglpk40_4.65-1_amd64.deb ...
Unpacking libglpk40:amd64 (4.65-1) ...
Selecting previously unselected package libgmpxx4ldbl:amd64.
Preparing to unpack .../15-libgmpxx4ldbl_2%3a6.1.2+dfsg-2_amd64.deb ...
Unpacking libgmpxx4ldbl:amd64 (2:6.1.2+dfsg-2) ...
Selecting previously unselected package libgmp-dev:amd64.
Preparing to unpack .../16-libgmp-dev_2%3a6.1.2+dfsg-2_amd64.deb ...
Unpacking libgmp-dev:amd64 (2:6.1.2+dfsg-2) ...
Selecting previously unselected package zlib1g-dev:amd64.
Preparing to unpack .../17-zlib1g-dev_1%3a1.2.11.dfsg-0ubuntu2_amd64.deb ...
Unpacking zlib1g-dev:amd64 (1:1.2.11.dfsg-0ubuntu2) ...
Selecting previously unselected package libgraphblas1:amd64.
Preparing to unpack .../18-libgraphblas1_1%3a5.1.2-2_amd64.deb ...
Unpacking libgraphblas1:amd64 (1:5.1.2-2) ...
Selecting previously unselected package libklu1:amd64.
Preparing to unpack .../19-libklu1_1%3a5.1.2-2_amd64.deb ...
Unpacking libklu1:amd64 (1:5.1.2-2) ...
Selecting previously unselected package libldl2:amd64.
Preparing to unpack .../20-libldl2_1%3a5.1.2-2_amd64.deb ...
Unpacking libldl2:amd64 (1:5.1.2-2) ...
Selecting previously unselected package libumfpack5:amd64.
Preparing to unpack .../21-libumfpack5_1%3a5.1.2-2_amd64.deb ...
Unpacking libumfpack5:amd64 (1:5.1.2-2) ...
Selecting previously unselected package librbio2:amd64.
Preparing to unpack .../22-librbio2_1%3a5.1.2-2_amd64.deb ...
Unpacking librbio2:amd64 (1:5.1.2-2) ...
Selecting previously unselected package libspqr2:amd64.
Preparing to unpack .../23-libspqr2_1%3a5.1.2-2_amd64.deb ...
Unpacking libspqr2:amd64 (1:5.1.2-2) ...
Selecting previously unselected package liblapack-dev:amd64.
Preparing to unpack .../24-liblapack-dev_3.7.1-4ubuntu1_amd64.deb ...
Unpacking liblapack-dev:amd64 (3.7.1-4ubuntu1) ...
Selecting previously unselected package libsuitesparse-dev:amd64.
Preparing to unpack .../25-libsuitesparse-dev_1%3a5.1.2-2_amd64.deb ...
Unpacking libsuitesparse-dev:amd64 (1:5.1.2-2) ...
Selecting previously unselected package libglpk-dev:amd64.
Preparing to unpack .../26-libglpk-dev_4.65-1_amd64.deb ...
Unpacking libglpk-dev:amd64 (4.65-1) ...
Setting up libbtf1:amd64 (1:5.1.2-2) ...
Setting up libldl2:amd64 (1:5.1.2-2) ...
Setting up libcxsparse3:amd64 (1:5.1.2-2) ...
Setting up libgfortran4:amd64 (7.3.0-16ubuntu3) ...
Setting up libgraphblas1:amd64 (1:5.1.2-2) ...
Setting up libblas3:amd64 (3.7.1-4ubuntu1) ...
update-alternatives: using /usr/lib/x86_64-linux-gnu/blas/libblas.so.3 to provide /usr/lib/x86_64-linux-gnu/libblas.so.3 (libblas.so.3-x86_64-linux-gnu) in auto mode
Processing triggers for libc-bin (2.27-3ubuntu1) ...
Setting up libsuitesparseconfig5:amd64 (1:5.1.2-2) ...
Setting up libmetis5:amd64 (5.1.0.dfsg-5) ...
Setting up libltdl7:amd64 (2.4.6-2) ...
Setting up libcolamd2:amd64 (1:5.1.2-2) ...
Setting up libccolamd2:amd64 (1:5.1.2-2) ...
Setting up libgmpxx4ldbl:amd64 (2:6.1.2+dfsg-2) ...
Setting up zlib1g-dev:amd64 (1:1.2.11.dfsg-0ubuntu2) ...
Setting up libgmp-dev:amd64 (2:6.1.2+dfsg-2) ...
Setting up libblas-dev:amd64 (3.7.1-4ubuntu1) ...
update-alternatives: using /usr/lib/x86_64-linux-gnu/blas/libblas.so to provide /usr/lib/x86_64-linux-gnu/libblas.so (libblas.so-x86_64-linux-gnu) in auto mode
Setting up liblapack3:amd64 (3.7.1-4ubuntu1) ...
update-alternatives: using /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3 to provide /usr/lib/x86_64-linux-gnu/liblapack.so.3 (liblapack.so.3-x86_64-linux-gnu) in auto mode
Setting up librbio2:amd64 (1:5.1.2-2) ...
Setting up libcamd2:amd64 (1:5.1.2-2) ...
Setting up libamd2:amd64 (1:5.1.2-2) ...
Setting up liblapack-dev:amd64 (3.7.1-4ubuntu1) ...
update-alternatives: using /usr/lib/x86_64-linux-gnu/lapack/liblapack.so to provide /usr/lib/x86_64-linux-gnu/liblapack.so (liblapack.so-x86_64-linux-gnu) in auto mode
Setting up libglpk40:amd64 (4.65-1) ...
Setting up libklu1:amd64 (1:5.1.2-2) ...
Setting up libcholmod3:amd64 (1:5.1.2-2) ...
Setting up libspqr2:amd64 (1:5.1.2-2) ...
Setting up libumfpack5:amd64 (1:5.1.2-2) ...
Setting up libsuitesparse-dev:amd64 (1:5.1.2-2) ...
Setting up libglpk-dev:amd64 (4.65-1) ...
Processing triggers for libc-bin (2.27-3ubuntu1) ...
# OS packages installation successful
# Now letting OPAM install the packages
The following actions will be performed:
  - install glpk 0.1.6

<><> Gathering sources ><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
[glpk.0.1.6] found in cache

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
[ERROR] The compilation of glpk failed at "/usr/bin/make byte opt".

#=== ERROR while compiling glpk.0.1.6 =========================================#
# context              2.0.0 | linux/x86_64 | ocaml-base-compiler.4.06.1 | git+file:///home/opam/opam-repository
# path                 ~/.opam/4.06/.opam-switch/build/glpk.0.1.6
# command              /usr/bin/make byte opt
# exit-code            2
# env-file             ~/.opam/log/glpk-13-05296d.env
# output-file          ~/.opam/log/glpk-13-05296d.out
### output ###
# make -C src byte
# make[1]: Entering directory '/home/opam/.opam/4.06/.opam-switch/build/glpk.0.1.6/src'
# make[2]: Entering directory '/home/opam/.opam/4.06/.opam-switch/build/glpk.0.1.6/src'
# making ._bcdi/glpk.di from glpk.mli
# making ._d/glpk.d from glpk.ml
# ocamlc -c -cc "cc" -ccopt "-fPIC -Wall -ansi -DCAML_NAME_SPACE -g \
# 			-DPIC   \
# 			    -o glpk_stubs.o " glpk_stubs.c 
# In file included from /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:23:0,
#                  from glpk_stubs.c:23:
# /home/opam/.opam/4.06/lib/ocaml/caml/misc.h:137:15: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'int'
#  static inline int caml_uadd_overflow(uintnat a, uintnat b, uintnat * res)
#                ^~~
# /home/opam/.opam/4.06/lib/ocaml/caml/misc.h:148:15: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'int'
#  static inline int caml_usub_overflow(uintnat a, uintnat b, uintnat * res)
#                ^~~
# /home/opam/.opam/4.06/lib/ocaml/caml/misc.h:160:15: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'int'
#  static inline int caml_umul_overflow(uintnat a, uintnat b, uintnat * res)
#                ^~~
# In file included from glpk_stubs.c:23:0:
# /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:64:8: error: unknown type name 'inline'
#  static inline value caml_alloc_unboxed (value arg) { return arg; }
#         ^~~~~~
# /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:64:21: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'caml_alloc_unboxed'
#  static inline value caml_alloc_unboxed (value arg) { return arg; }
#                      ^~~~~~~~~~~~~~~~~~
# /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:65:8: error: unknown type name 'inline'
#  static inline value caml_alloc_boxed (value arg) {
#         ^~~~~~
# /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:65:21: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'caml_alloc_boxed'
#  static inline value caml_alloc_boxed (value arg) {
#                      ^~~~~~~~~~~~~~~~
# /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:70:8: error: unknown type name 'inline'
#  static inline value caml_field_unboxed (value arg) { return arg; }
#         ^~~~~~
# /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:70:21: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'caml_field_unboxed'
#  static inline value caml_field_unboxed (value arg) { return arg; }
#                      ^~~~~~~~~~~~~~~~~~
# /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:71:8: error: unknown type name 'inline'
#  static inline value caml_field_boxed (value arg) { return Field (arg, 0); }
#         ^~~~~~
# /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:71:21: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'caml_field_boxed'
#  static inline value caml_field_boxed (value arg) { return Field (arg, 0); }
#                      ^~~~~~~~~~~~~~~~
# glpk_stubs.c: In function 'raise_on_error':
# glpk_stubs.c:40:10: error: 'LPX_E_OK' undeclared (first use in this function)
#      case LPX_E_OK:
#           ^~~~~~~~
# glpk_stubs.c:40:10: note: each undeclared identifier is reported only once for each function it appears in
# glpk_stubs.c:43:10: error: 'LPX_E_FAULT' undeclared (first use in this function); did you mean 'LPX_E_OK'?
#      case LPX_E_FAULT:
#           ^~~~~~~~~~~
#           LPX_E_OK
# glpk_stubs.c:46:10: error: 'LPX_E_OBJLL' undeclared (first use in this function); did you mean 'GLP_EOBJLL'?
#      case LPX_E_OBJLL:
#           ^~~~~~~~~~~
#           GLP_EOBJLL
# glpk_stubs.c:49:10: error: 'LPX_E_OBJUL' undeclared (first use in this function); did you mean 'LPX_E_OBJLL'?
#      case LPX_E_OBJUL:
#           ^~~~~~~~~~~
#           LPX_E_OBJLL
# glpk_stubs.c:52:10: error: 'LPX_E_NOPFS' undeclared (first use in this function); did you mean 'GLP_ENOPFS'?
#      case LPX_E_NOPFS:
#           ^~~~~~~~~~~
#           GLP_ENOPFS
# glpk_stubs.c:55:10: error: 'LPX_E_NODFS' undeclared (first use in this function); did you mean 'LPX_E_NOPFS'?
#      case LPX_E_NODFS:
#           ^~~~~~~~~~~
#           LPX_E_NOPFS
# glpk_stubs.c:58:10: error: 'LPX_E_ITLIM' undeclared (first use in this function); did you mean 'GLP_EITLIM'?
#      case LPX_E_ITLIM:
#           ^~~~~~~~~~~
#           GLP_EITLIM
# glpk_stubs.c:61:10: error: 'LPX_E_TMLIM' undeclared (first use in this function); did you mean 'LPX_E_ITLIM'?
#      case LPX_E_TMLIM:
#           ^~~~~~~~~~~
#           LPX_E_ITLIM
# glpk_stubs.c:64:10: error: 'LPX_E_SING' undeclared (first use in this function); did you mean 'GLP_ESING'?
#      case LPX_E_SING:
#           ^~~~~~~~~~
#           GLP_ESING
# glpk_stubs.c:67:10: error: 'LPX_E_EMPTY' undeclared (first use in this function); did you mean 'LPX_E_TMLIM'?
#      case LPX_E_EMPTY:
#           ^~~~~~~~~~~
#           LPX_E_TMLIM
# glpk_stubs.c:70:10: error: 'LPX_E_BADB' undeclared (first use in this function); did you mean 'GLP_EBADB'?
#      case LPX_E_BADB:
#           ^~~~~~~~~~
#           GLP_EBADB
# glpk_stubs.c:73:10: error: 'LPX_E_NOCONV' undeclared (first use in this function); did you mean 'LPX_E_NODFS'?
#      case LPX_E_NOCONV:
#           ^~~~~~~~~~~~
#           LPX_E_NODFS
# glpk_stubs.c: In function 'finalize_lpx':
# glpk_stubs.c:86:3: warning: implicit declaration of function 'lpx_delete_prob'; did you mean 'glp_delete_prob'? [-Wimplicit-function-declaration]
#    lpx_delete_prob(Lpx_val(block));
#    ^~~~~~~~~~~~~~~
#    glp_delete_prob
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:86:19: note: in expansion of macro 'Lpx_val'
#    lpx_delete_prob(Lpx_val(block));
#                    ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:86:19: note: in expansion of macro 'Lpx_val'
#    lpx_delete_prob(Lpx_val(block));
#                    ^~~~~~~
# glpk_stubs.c: At top level:
# glpk_stubs.c:99:22: error: unknown type name 'LPX'
#  static value new_blp(LPX* lp)
#                       ^~~
# glpk_stubs.c: In function 'ocaml_glpk_new_prob':
# glpk_stubs.c:108:3: error: unknown type name 'LPX'
#    LPX *lp = lpx_create_prob();
#    ^~~
# glpk_stubs.c:108:13: warning: implicit declaration of function 'lpx_create_prob'; did you mean 'glp_create_prob'? [-Wimplicit-function-declaration]
#    LPX *lp = lpx_create_prob();
#              ^~~~~~~~~~~~~~~
#              glp_create_prob
# glpk_stubs.c:108:13: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
# glpk_stubs.c:109:10: warning: implicit declaration of function 'new_blp' [-Wimplicit-function-declaration]
#    return new_blp(lp);
#           ^~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_set_prob_name':
# glpk_stubs.c:114:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:114:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:114:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:115:3: warning: implicit declaration of function 'lpx_set_prob_name'; did you mean 'glp_set_prob_name'? [-Wimplicit-function-declaration]
#    lpx_set_prob_name(lp, String_val(name));
#    ^~~~~~~~~~~~~~~~~
#    glp_set_prob_name
# glpk_stubs.c: In function 'ocaml_glpk_get_prob_name':
# glpk_stubs.c:122:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:122:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:122:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# In file included from glpk_stubs.c:27:0:
# glpk_stubs.c:123:31: warning: implicit declaration of function 'lpx_get_prob_name'; did you mean 'glp_get_prob_name'? [-Wimplicit-function-declaration]
#    CAMLreturn(caml_copy_string(lpx_get_prob_name(lp)));
#                                ^
# /home/opam/.opam/4.06/lib/ocaml/caml/memory.h:451:29: note: in definition of macro 'CAMLreturnT'
#    type caml__temp_result = (result); \
#                              ^~~~~~
# glpk_stubs.c:123:3: note: in expansion of macro 'CAMLreturn'
#    CAMLreturn(caml_copy_string(lpx_get_prob_name(lp)));
#    ^~~~~~~~~~
# glpk_stubs.c:123:31: warning: passing argument 1 of 'caml_copy_string' makes pointer from integer without a cast [-Wint-conversion]
#    CAMLreturn(caml_copy_string(lpx_get_prob_name(lp)));
#                                ^
# /home/opam/.opam/4.06/lib/ocaml/caml/memory.h:451:29: note: in definition of macro 'CAMLreturnT'
#    type caml__temp_result = (result); \
#                              ^~~~~~
# glpk_stubs.c:123:3: note: in expansion of macro 'CAMLreturn'
#    CAMLreturn(caml_copy_string(lpx_get_prob_name(lp)));
#    ^~~~~~~~~~
# In file included from glpk_stubs.c:23:0:
# /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:36:18: note: expected 'const char *' but argument is of type 'int'
#  CAMLextern value caml_copy_string (char const *);
#                   ^~~~~~~~~~~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_set_obj_name':
# glpk_stubs.c:128:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:128:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:128:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:129:3: warning: implicit declaration of function 'lpx_set_obj_name'; did you mean 'glp_set_obj_name'? [-Wimplicit-function-declaration]
#    lpx_set_obj_name(lp, String_val(name));
#    ^~~~~~~~~~~~~~~~
#    glp_set_obj_name
# glpk_stubs.c: In function 'ocaml_glpk_get_obj_name':
# glpk_stubs.c:136:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:136:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:136:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# In file included from glpk_stubs.c:27:0:
# glpk_stubs.c:137:31: warning: implicit declaration of function 'lpx_get_obj_name'; did you mean 'glp_get_obj_name'? [-Wimplicit-function-declaration]
#    CAMLreturn(caml_copy_string(lpx_get_obj_name(lp)));
#                                ^
# /home/opam/.opam/4.06/lib/ocaml/caml/memory.h:451:29: note: in definition of macro 'CAMLreturnT'
#    type caml__temp_result = (result); \
#                              ^~~~~~
# glpk_stubs.c:137:3: note: in expansion of macro 'CAMLreturn'
#    CAMLreturn(caml_copy_string(lpx_get_obj_name(lp)));
#    ^~~~~~~~~~
# glpk_stubs.c:137:31: warning: passing argument 1 of 'caml_copy_string' makes pointer from integer without a cast [-Wint-conversion]
#    CAMLreturn(caml_copy_string(lpx_get_obj_name(lp)));
#                                ^
# /home/opam/.opam/4.06/lib/ocaml/caml/memory.h:451:29: note: in definition of macro 'CAMLreturnT'
#    type caml__temp_result = (result); \
#                              ^~~~~~
# glpk_stubs.c:137:3: note: in expansion of macro 'CAMLreturn'
#    CAMLreturn(caml_copy_string(lpx_get_obj_name(lp)));
#    ^~~~~~~~~~
# In file included from glpk_stubs.c:23:0:
# /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:36:18: note: expected 'const char *' but argument is of type 'int'
#  CAMLextern value caml_copy_string (char const *);
#                   ^~~~~~~~~~~~~~~~
# glpk_stubs.c: At top level:
# glpk_stubs.c:140:33: error: 'LPX_MIN' undeclared here (not in a function); did you mean 'GLP_MIN'?
#  static int direction_table[] = {LPX_MIN, LPX_MAX};
#                                  ^~~~~~~
#                                  GLP_MIN
# glpk_stubs.c:140:42: error: 'LPX_MAX' undeclared here (not in a function); did you mean 'LPX_MIN'?
#  static int direction_table[] = {LPX_MIN, LPX_MAX};
#                                           ^~~~~~~
#                                           LPX_MIN
# glpk_stubs.c: In function 'ocaml_glpk_set_direction':
# glpk_stubs.c:144:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:144:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:144:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:144:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:144:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:144:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:145:3: warning: implicit declaration of function 'lpx_set_obj_dir'; did you mean 'glp_set_obj_dir'? [-Wimplicit-function-declaration]
#    lpx_set_obj_dir(lp, direction_table[Int_val(direction)]);
#    ^~~~~~~~~~~~~~~
#    glp_set_obj_dir
# glpk_stubs.c: In function 'ocaml_glpk_get_direction':
# glpk_stubs.c:151:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:151:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:151:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:151:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:151:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:151:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:152:10: warning: implicit declaration of function 'lpx_get_obj_dir'; did you mean 'glp_get_obj_dir'? [-Wimplicit-function-declaration]
#    switch(lpx_get_obj_dir(lp))
#           ^~~~~~~~~~~~~~~
#           glp_get_obj_dir
# glpk_stubs.c: In function 'ocaml_glpk_add_rows':
# glpk_stubs.c:167:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:167:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:167:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:167:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:167:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:167:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:168:3: warning: implicit declaration of function 'lpx_add_rows'; did you mean 'glp_add_rows'? [-Wimplicit-function-declaration]
#    lpx_add_rows(lp, Int_val(n));
#    ^~~~~~~~~~~~
#    glp_add_rows
# glpk_stubs.c: In function 'ocaml_glpk_set_row_name':
# glpk_stubs.c:174:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:174:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:174:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:174:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:174:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:174:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:175:3: warning: implicit declaration of function 'lpx_set_row_name'; did you mean 'glp_set_row_name'? [-Wimplicit-function-declaration]
#    lpx_set_row_name(lp, Int_val(n) + 1, String_val(name));
#    ^~~~~~~~~~~~~~~~
#    glp_set_row_name
# glpk_stubs.c: In function 'ocaml_glpk_get_row_name':
# glpk_stubs.c:182:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:182:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:182:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:182:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:182:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:182:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# In file included from glpk_stubs.c:27:0:
# glpk_stubs.c:183:31: warning: implicit declaration of function 'lpx_get_row_name'; did you mean 'glp_get_row_name'? [-Wimplicit-function-declaration]
#    CAMLreturn(caml_copy_string(lpx_get_row_name(lp, Int_val(n) + 1)));
#                                ^
# /home/opam/.opam/4.06/lib/ocaml/caml/memory.h:451:29: note: in definition of macro 'CAMLreturnT'
#    type caml__temp_result = (result); \
#                              ^~~~~~
# glpk_stubs.c:183:3: note: in expansion of macro 'CAMLreturn'
#    CAMLreturn(caml_copy_string(lpx_get_row_name(lp, Int_val(n) + 1)));
#    ^~~~~~~~~~
# glpk_stubs.c:183:31: warning: passing argument 1 of 'caml_copy_string' makes pointer from integer without a cast [-Wint-conversion]
#    CAMLreturn(caml_copy_string(lpx_get_row_name(lp, Int_val(n) + 1)));
#                                ^
# /home/opam/.opam/4.06/lib/ocaml/caml/memory.h:451:29: note: in definition of macro 'CAMLreturnT'
#    type caml__temp_result = (result); \
#                              ^~~~~~
# glpk_stubs.c:183:3: note: in expansion of macro 'CAMLreturn'
#    CAMLreturn(caml_copy_string(lpx_get_row_name(lp, Int_val(n) + 1)));
#    ^~~~~~~~~~
# In file included from glpk_stubs.c:23:0:
# /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:36:18: note: expected 'const char *' but argument is of type 'int'
#  CAMLextern value caml_copy_string (char const *);
#                   ^~~~~~~~~~~~~~~~
# glpk_stubs.c: At top level:
# glpk_stubs.c:186:34: error: 'LPX_FR' undeclared here (not in a function); did you mean 'GLP_FR'?
#  static int auxvartype_table[] = {LPX_FR, LPX_LO, LPX_UP, LPX_DB, LPX_FX};
#                                   ^~~~~~
#                                   GLP_FR
# glpk_stubs.c:186:34: warning: initialization makes integer from pointer without a cast [-Wint-conversion]
# glpk_stubs.c:186:34: note: (near initialization for 'auxvartype_table[0]')
# glpk_stubs.c:186:34: error: initializer element is not constant
# glpk_stubs.c:186:34: note: (near initialization for 'auxvartype_table[0]')
# glpk_stubs.c:186:42: error: 'LPX_LO' undeclared here (not in a function); did you mean 'LPX_FR'?
#  static int auxvartype_table[] = {LPX_FR, LPX_LO, LPX_UP, LPX_DB, LPX_FX};
#                                           ^~~~~~
#                                           LPX_FR
# glpk_stubs.c:186:42: warning: initialization makes integer from pointer without a cast [-Wint-conversion]
# glpk_stubs.c:186:42: note: (near initialization for 'auxvartype_table[1]')
# glpk_stubs.c:186:42: error: initializer element is not constant
# glpk_stubs.c:186:42: note: (near initialization for 'auxvartype_table[1]')
# glpk_stubs.c:186:50: error: 'LPX_UP' undeclared here (not in a function); did you mean 'LPX_LO'?
#  static int auxvartype_table[] = {LPX_FR, LPX_LO, LPX_UP, LPX_DB, LPX_FX};
#                                                   ^~~~~~
#                                                   LPX_LO
# glpk_stubs.c:186:50: warning: initialization makes integer from pointer without a cast [-Wint-conversion]
# glpk_stubs.c:186:50: note: (near initialization for 'auxvartype_table[2]')
# glpk_stubs.c:186:50: error: initializer element is not constant
# glpk_stubs.c:186:50: note: (near initialization for 'auxvartype_table[2]')
# glpk_stubs.c:186:58: error: 'LPX_DB' undeclared here (not in a function); did you mean 'LPX_UP'?
#  static int auxvartype_table[] = {LPX_FR, LPX_LO, LPX_UP, LPX_DB, LPX_FX};
#                                                           ^~~~~~
#                                                           LPX_UP
# glpk_stubs.c:186:58: warning: initialization makes integer from pointer without a cast [-Wint-conversion]
# glpk_stubs.c:186:58: note: (near initialization for 'auxvartype_table[3]')
# glpk_stubs.c:186:58: error: initializer element is not constant
# glpk_stubs.c:186:58: note: (near initialization for 'auxvartype_table[3]')
# glpk_stubs.c:186:66: error: 'LPX_FX' undeclared here (not in a function); did you mean 'LPX_FR'?
#  static int auxvartype_table[] = {LPX_FR, LPX_LO, LPX_UP, LPX_DB, LPX_FX};
#                                                                   ^~~~~~
#                                                                   LPX_FR
# glpk_stubs.c:186:66: warning: initialization makes integer from pointer without a cast [-Wint-conversion]
# glpk_stubs.c:186:66: note: (near initialization for 'auxvartype_table[4]')
# glpk_stubs.c:186:66: error: initializer element is not constant
# glpk_stubs.c:186:66: note: (near initialization for 'auxvartype_table[4]')
# glpk_stubs.c: In function 'ocaml_glpk_set_row_bounds':
# glpk_stubs.c:190:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:190:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:190:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:190:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:190:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:190:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:191:3: warning: implicit declaration of function 'lpx_set_row_bnds'; did you mean 'glp_set_row_bnds'? [-Wimplicit-function-declaration]
#    lpx_set_row_bnds(lp, Int_val(n) + 1, auxvartype_table[Int_val(type)], Double_val(lb), Double_val(ub));
#    ^~~~~~~~~~~~~~~~
#    glp_set_row_bnds
# glpk_stubs.c: In function 'ocaml_glpk_add_cols':
# glpk_stubs.c:197:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:197:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:197:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:197:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:197:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:197:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:198:3: warning: implicit declaration of function 'lpx_add_cols'; did you mean 'glp_add_cols'? [-Wimplicit-function-declaration]
#    lpx_add_cols(lp, Int_val(n));
#    ^~~~~~~~~~~~
#    glp_add_cols
# glpk_stubs.c: In function 'ocaml_glpk_set_col_name':
# glpk_stubs.c:204:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:204:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:204:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:204:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:204:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:204:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:205:3: warning: implicit declaration of function 'lpx_set_col_name'; did you mean 'glp_set_col_name'? [-Wimplicit-function-declaration]
#    lpx_set_col_name(lp, Int_val(n) + 1, String_val(name));
#    ^~~~~~~~~~~~~~~~
#    glp_set_col_name
# glpk_stubs.c: In function 'ocaml_glpk_get_col_name':
# glpk_stubs.c:212:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:212:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:212:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:212:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:212:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:212:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# In file included from glpk_stubs.c:27:0:
# glpk_stubs.c:213:31: warning: implicit declaration of function 'lpx_get_col_name'; did you mean 'glp_get_col_name'? [-Wimplicit-function-declaration]
#    CAMLreturn(caml_copy_string(lpx_get_col_name(lp, Int_val(n) + 1)));
#                                ^
# /home/opam/.opam/4.06/lib/ocaml/caml/memory.h:451:29: note: in definition of macro 'CAMLreturnT'
#    type caml__temp_result = (result); \
#                              ^~~~~~
# glpk_stubs.c:213:3: note: in expansion of macro 'CAMLreturn'
#    CAMLreturn(caml_copy_string(lpx_get_col_name(lp, Int_val(n) + 1)));
#    ^~~~~~~~~~
# glpk_stubs.c:213:31: warning: passing argument 1 of 'caml_copy_string' makes pointer from integer without a cast [-Wint-conversion]
#    CAMLreturn(caml_copy_string(lpx_get_col_name(lp, Int_val(n) + 1)));
#                                ^
# /home/opam/.opam/4.06/lib/ocaml/caml/memory.h:451:29: note: in definition of macro 'CAMLreturnT'
#    type caml__temp_result = (result); \
#                              ^~~~~~
# glpk_stubs.c:213:3: note: in expansion of macro 'CAMLreturn'
#    CAMLreturn(caml_copy_string(lpx_get_col_name(lp, Int_val(n) + 1)));
#    ^~~~~~~~~~
# In file included from glpk_stubs.c:23:0:
# /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:36:18: note: expected 'const char *' but argument is of type 'int'
#  CAMLextern value caml_copy_string (char const *);
#                   ^~~~~~~~~~~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_set_col_bounds':
# glpk_stubs.c:218:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:218:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:218:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:218:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:218:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:218:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:219:3: warning: implicit declaration of function 'lpx_set_col_bnds'; did you mean 'glp_set_col_bnds'? [-Wimplicit-function-declaration]
#    lpx_set_col_bnds(lp, Int_val(n) + 1, auxvartype_table[Int_val(type)], Double_val(lb), Double_val(ub));
#    ^~~~~~~~~~~~~~~~
#    glp_set_col_bnds
# glpk_stubs.c: In function 'ocaml_glpk_set_obj_coef':
# glpk_stubs.c:225:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:225:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:225:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:225:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:225:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:225:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:226:3: warning: implicit declaration of function 'lpx_set_obj_coef'; did you mean 'glp_set_obj_coef'? [-Wimplicit-function-declaration]
#    lpx_set_obj_coef(lp, Int_val(n) + 1, Double_val(coef));
#    ^~~~~~~~~~~~~~~~
#    glp_set_obj_coef
# glpk_stubs.c: In function 'ocaml_glpk_load_matrix':
# glpk_stubs.c:232:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:232:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:232:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:232:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:232:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:232:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:265:3: warning: implicit declaration of function 'lpx_load_matrix'; did you mean 'glp_load_matrix'? [-Wimplicit-function-declaration]
#    lpx_load_matrix(lp, n - 1, ia, ja, ar);
#    ^~~~~~~~~~~~~~~
#    glp_load_matrix
# glpk_stubs.c: In function 'ocaml_glpk_load_sparse_matrix':
# glpk_stubs.c:276:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:276:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:276:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:276:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:276:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:276:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_simplex':
# glpk_stubs.c:306:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:306:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:306:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:306:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:306:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:306:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:310:9: warning: implicit declaration of function 'lpx_simplex'; did you mean 'glp_simplex'? [-Wimplicit-function-declaration]
#    ret = lpx_simplex(lp);
#          ^~~~~~~~~~~
#          glp_simplex
# glpk_stubs.c: In function 'ocaml_glpk_get_obj_val':
# glpk_stubs.c:319:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:319:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:319:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:319:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:319:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:319:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:321:7: warning: implicit declaration of function 'lpx_get_class'; did you mean 'glp_get_status'? [-Wimplicit-function-declaration]
#    if (lpx_get_class(lp) == LPX_MIP)
#        ^~~~~~~~~~~~~
#        glp_get_status
# glpk_stubs.c:321:28: error: 'LPX_MIP' undeclared (first use in this function); did you mean 'LPX_MIN'?
#    if (lpx_get_class(lp) == LPX_MIP)
#                             ^~~~~~~
#                             LPX_MIN
# glpk_stubs.c:321:25: warning: comparison between pointer and integer
#    if (lpx_get_class(lp) == LPX_MIP)
#                          ^~
# glpk_stubs.c:322:11: warning: implicit declaration of function 'lpx_mip_obj_val'; did you mean 'glp_mip_obj_val'? [-Wimplicit-function-declaration]
#      ans = lpx_mip_obj_val(lp);
#            ^~~~~~~~~~~~~~~
#            glp_mip_obj_val
# glpk_stubs.c:324:11: warning: implicit declaration of function 'lpx_get_obj_val'; did you mean 'glp_get_obj_val'? [-Wimplicit-function-declaration]
#      ans = lpx_get_obj_val(lp);
#            ^~~~~~~~~~~~~~~
#            glp_get_obj_val
# glpk_stubs.c: In function 'ocaml_glpk_get_col_prim':
# glpk_stubs.c:330:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:330:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:330:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:330:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:330:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:330:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:333:28: error: 'LPX_MIP' undeclared (first use in this function); did you mean 'LPX_MIN'?
#    if (lpx_get_class(lp) == LPX_MIP)
#                             ^~~~~~~
#                             LPX_MIN
# glpk_stubs.c:333:25: warning: comparison between pointer and integer
#    if (lpx_get_class(lp) == LPX_MIP)
#                          ^~
# glpk_stubs.c:334:11: warning: implicit declaration of function 'lpx_mip_col_val'; did you mean 'glp_mip_col_val'? [-Wimplicit-function-declaration]
#      ans = lpx_mip_col_val(lp, Int_val(n) + 1);
#            ^~~~~~~~~~~~~~~
#            glp_mip_col_val
# glpk_stubs.c:336:11: warning: implicit declaration of function 'lpx_get_col_prim'; did you mean 'glp_get_col_prim'? [-Wimplicit-function-declaration]
#      ans = lpx_get_col_prim(lp, Int_val(n) + 1);
#            ^~~~~~~~~~~~~~~~
#            glp_get_col_prim
# glpk_stubs.c: In function 'ocaml_glpk_get_row_prim':
# glpk_stubs.c:342:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:342:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:342:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:342:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:342:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:342:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:343:27: warning: implicit declaration of function 'lpx_get_row_prim'; did you mean 'glp_get_row_prim'? [-Wimplicit-function-declaration]
#    return caml_copy_double(lpx_get_row_prim(lp, Int_val(n) + 1));
#                            ^~~~~~~~~~~~~~~~
#                            glp_get_row_prim
# glpk_stubs.c: In function 'ocaml_glpk_get_row_dual':
# glpk_stubs.c:348:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:348:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:348:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:348:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:348:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:348:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:349:27: warning: implicit declaration of function 'lpx_get_row_dual'; did you mean 'glp_get_row_dual'? [-Wimplicit-function-declaration]
#    return caml_copy_double(lpx_get_row_dual(lp, Int_val(n) + 1));
#                            ^~~~~~~~~~~~~~~~
#                            glp_get_row_dual
# glpk_stubs.c: In function 'ocaml_glpk_get_num_rows':
# glpk_stubs.c:354:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:354:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:354:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:354:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:354:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:354:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# In file included from /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:24:0,
#                  from glpk_stubs.c:23:
# glpk_stubs.c:355:18: warning: implicit declaration of function 'lpx_get_num_rows'; did you mean 'glp_get_num_rows'? [-Wimplicit-function-declaration]
#    return Val_int(lpx_get_num_rows(lp));
#                   ^
# /home/opam/.opam/4.06/lib/ocaml/caml/mlvalues.h:73:47: note: in definition of macro 'Val_long'
#  #define Val_long(x)     ((intnat) (((uintnat)(x) << 1)) + 1)
#                                                ^
# glpk_stubs.c:355:10: note: in expansion of macro 'Val_int'
#    return Val_int(lpx_get_num_rows(lp));
#           ^~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_get_num_cols':
# glpk_stubs.c:360:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:360:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:360:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:360:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:360:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:360:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# In file included from /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:24:0,
#                  from glpk_stubs.c:23:
# glpk_stubs.c:361:18: warning: implicit declaration of function 'lpx_get_num_cols'; did you mean 'glp_get_num_cols'? [-Wimplicit-function-declaration]
#    return Val_int(lpx_get_num_cols(lp));
#                   ^
# /home/opam/.opam/4.06/lib/ocaml/caml/mlvalues.h:73:47: note: in definition of macro 'Val_long'
#  #define Val_long(x)     ((intnat) (((uintnat)(x) << 1)) + 1)
#                                                ^
# glpk_stubs.c:361:10: note: in expansion of macro 'Val_int'
#    return Val_int(lpx_get_num_cols(lp));
#           ^~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_scale_problem':
# glpk_stubs.c:366:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:366:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:366:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:366:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:366:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:366:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:367:3: warning: implicit declaration of function 'lpx_scale_prob'; did you mean 'glp_scale_prob'? [-Wimplicit-function-declaration]
#    lpx_scale_prob(lp);
#    ^~~~~~~~~~~~~~
#    glp_scale_prob
# glpk_stubs.c: In function 'ocaml_glpk_unscale_problem':
# glpk_stubs.c:373:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:373:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:373:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:373:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:373:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:373:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:374:3: warning: implicit declaration of function 'lpx_unscale_prob'; did you mean 'glp_unscale_prob'? [-Wimplicit-function-declaration]
#    lpx_unscale_prob(lp);
#    ^~~~~~~~~~~~~~~~
#    glp_unscale_prob
# glpk_stubs.c: In function 'ocaml_glpk_interior':
# glpk_stubs.c:389:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:389:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:389:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:389:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:389:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:389:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:393:9: warning: implicit declaration of function 'lpx_interior'; did you mean 'glp_interior'? [-Wimplicit-function-declaration]
#    ret = lpx_interior(lp);
#          ^~~~~~~~~~~~
#          glp_interior
# glpk_stubs.c: At top level:
# glpk_stubs.c:400:29: error: 'LPX_LP' undeclared here (not in a function); did you mean 'LPX_UP'?
#  static int class_table[] = {LPX_LP, LPX_MIP};
#                              ^~~~~~
#                              LPX_UP
# glpk_stubs.c:400:29: warning: initialization makes integer from pointer without a cast [-Wint-conversion]
# glpk_stubs.c:400:29: note: (near initialization for 'class_table[0]')
# glpk_stubs.c:400:29: error: initializer element is not constant
# glpk_stubs.c:400:29: note: (near initialization for 'class_table[0]')
# glpk_stubs.c:400:37: error: 'LPX_MIP' undeclared here (not in a function); did you mean 'LPX_MIN'?
#  static int class_table[] = {LPX_LP, LPX_MIP};
#                                      ^~~~~~~
#                                      LPX_MIN
# glpk_stubs.c:400:37: warning: initialization makes integer from pointer without a cast [-Wint-conversion]
# glpk_stubs.c:400:37: note: (near initialization for 'class_table[1]')
# glpk_stubs.c:400:37: error: initializer element is not constant
# glpk_stubs.c:400:37: note: (near initialization for 'class_table[1]')
# glpk_stubs.c: In function 'ocaml_glpk_set_class':
# glpk_stubs.c:404:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:404:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:404:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:404:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:404:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:404:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:405:3: warning: implicit declaration of function 'lpx_set_class' [-Wimplicit-function-declaration]
#    lpx_set_class(lp, class_table[Int_val(class)]);
#    ^~~~~~~~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_get_class':
# glpk_stubs.c:411:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:411:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:411:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:411:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:411:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:411:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c: At top level:
# glpk_stubs.c:425:28: error: 'LPX_CV' undeclared here (not in a function); did you mean 'LPX_LP'?
#  static int kind_table[] = {LPX_CV, LPX_IV};
#                             ^~~~~~
#                             LPX_LP
# glpk_stubs.c:425:28: warning: initialization makes integer from pointer without a cast [-Wint-conversion]
# glpk_stubs.c:425:28: note: (near initialization for 'kind_table[0]')
# glpk_stubs.c:425:28: error: initializer element is not constant
# glpk_stubs.c:425:28: note: (near initialization for 'kind_table[0]')
# glpk_stubs.c:425:36: error: 'LPX_IV' undeclared here (not in a function); did you mean 'LPX_CV'?
#  static int kind_table[] = {LPX_CV, LPX_IV};
#                                     ^~~~~~
#                                     LPX_CV
# glpk_stubs.c:425:36: warning: initialization makes integer from pointer without a cast [-Wint-conversion]
# glpk_stubs.c:425:36: note: (near initialization for 'kind_table[1]')
# glpk_stubs.c:425:36: error: initializer element is not constant
# glpk_stubs.c:425:36: note: (near initialization for 'kind_table[1]')
# glpk_stubs.c: In function 'ocaml_glpk_set_col_kind':
# glpk_stubs.c:429:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:429:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:429:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:429:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:429:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:429:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:430:3: warning: implicit declaration of function 'lpx_set_col_kind'; did you mean 'glp_set_col_kind'? [-Wimplicit-function-declaration]
#    lpx_set_col_kind(lp, Int_val(n) + 1, kind_table[Int_val(kind)]);
#    ^~~~~~~~~~~~~~~~
#    glp_set_col_kind
# glpk_stubs.c: In function 'ocaml_glpk_integer':
# glpk_stubs.c:437:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:437:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:437:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:437:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:437:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:437:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:441:9: warning: implicit declaration of function 'lpx_integer'; did you mean 'glp_interior'? [-Wimplicit-function-declaration]
#    ret = lpx_integer(lp);
#          ^~~~~~~~~~~
#          glp_interior
# glpk_stubs.c: In function 'ocaml_glpk_intopt':
# glpk_stubs.c:451:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:451:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:451:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:451:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:451:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:451:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:455:9: warning: implicit declaration of function 'lpx_intopt'; did you mean 'glp_intopt'? [-Wimplicit-function-declaration]
#    ret = lpx_intopt(lp);
#          ^~~~~~~~~~
#          glp_intopt
# glpk_stubs.c: In function 'ocaml_glpk_warm_up':
# glpk_stubs.c:464:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp);
#    ^~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:464:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:464:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:464:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:464:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:464:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp);
#              ^~~~~~~
# glpk_stubs.c:465:18: warning: implicit declaration of function 'lpx_warm_up'; did you mean 'glp_warm_up'? [-Wimplicit-function-declaration]
#    raise_on_error(lpx_warm_up(lp));
#                   ^~~~~~~~~~~
#                   glp_warm_up
# glpk_stubs.c: In function 'ocaml_glpk_get_message_level':
# glpk_stubs.c:472:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:496:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:496:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:496:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:496:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:496:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:496:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#  ^~~~~~~~~~~~~~
# In file included from /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:24:0,
#                  from glpk_stubs.c:23:
# glpk_stubs.c:473:18: warning: implicit declaration of function 'lpx_get_int_parm'; did you mean 'glp_get_it_cnt'? [-Wimplicit-function-declaration]
#    return Val_int(lpx_get_int_parm(lp, param)); \
#                   ^
# /home/opam/.opam/4.06/lib/ocaml/caml/mlvalues.h:73:47: note: in definition of macro 'Val_long'
#  #define Val_long(x)     ((intnat) (((uintnat)(x) << 1)) + 1)
#                                                ^
# glpk_stubs.c:473:10: note: in expansion of macro 'Val_int'
#    return Val_int(lpx_get_int_parm(lp, param)); \
#           ^~~~~~~
# glpk_stubs.c:496:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:496:31: error: 'LPX_K_MSGLEV' undeclared (first use in this function)
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#                                ^
# /home/opam/.opam/4.06/lib/ocaml/caml/mlvalues.h:73:47: note: in definition of macro 'Val_long'
#  #define Val_long(x)     ((intnat) (((uintnat)(x) << 1)) + 1)
#                                                ^
# glpk_stubs.c:473:10: note: in expansion of macro 'Val_int'
#    return Val_int(lpx_get_int_parm(lp, param)); \
#           ^~~~~~~
# glpk_stubs.c:496:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_set_message_level':
# glpk_stubs.c:477:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:496:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:496:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:496:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:496:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:496:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:496:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:478:3: warning: implicit declaration of function 'lpx_set_int_parm'; did you mean 'glp_set_it_cnt'? [-Wimplicit-function-declaration]
#    lpx_set_int_parm(lp, param, Int_val(n)); \
#    ^
# glpk_stubs.c:496:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:496:31: error: 'LPX_K_MSGLEV' undeclared (first use in this function)
#  BIND_INT_PARAM(message_level, LPX_K_MSGLEV);
#                                ^
# glpk_stubs.c:478:24: note: in definition of macro 'BIND_INT_PARAM'
#    lpx_set_int_parm(lp, param, Int_val(n)); \
#                         ^~~~~
# glpk_stubs.c: In function 'ocaml_glpk_get_scaling':
# glpk_stubs.c:472:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:497:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(scaling, LPX_K_SCALE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:497:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(scaling, LPX_K_SCALE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:497:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(scaling, LPX_K_SCALE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:497:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(scaling, LPX_K_SCALE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:497:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(scaling, LPX_K_SCALE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:497:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(scaling, LPX_K_SCALE);
#  ^~~~~~~~~~~~~~
# In file included from /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:24:0,
#                  from glpk_stubs.c:23:
# glpk_stubs.c:497:25: error: 'LPX_K_SCALE' undeclared (first use in this function)
#  BIND_INT_PARAM(scaling, LPX_K_SCALE);
#                          ^
# /home/opam/.opam/4.06/lib/ocaml/caml/mlvalues.h:73:47: note: in definition of macro 'Val_long'
#  #define Val_long(x)     ((intnat) (((uintnat)(x) << 1)) + 1)
#                                                ^
# glpk_stubs.c:473:10: note: in expansion of macro 'Val_int'
#    return Val_int(lpx_get_int_parm(lp, param)); \
#           ^~~~~~~
# glpk_stubs.c:497:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(scaling, LPX_K_SCALE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_set_scaling':
# glpk_stubs.c:477:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:497:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(scaling, LPX_K_SCALE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:497:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(scaling, LPX_K_SCALE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:497:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(scaling, LPX_K_SCALE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:497:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(scaling, LPX_K_SCALE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:497:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(scaling, LPX_K_SCALE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:497:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(scaling, LPX_K_SCALE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:497:25: error: 'LPX_K_SCALE' undeclared (first use in this function)
#  BIND_INT_PARAM(scaling, LPX_K_SCALE);
#                          ^
# glpk_stubs.c:478:24: note: in definition of macro 'BIND_INT_PARAM'
#    lpx_set_int_parm(lp, param, Int_val(n)); \
#                         ^~~~~
# glpk_stubs.c: In function 'ocaml_glpk_get_use_dual_simplex':
# glpk_stubs.c:472:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:498:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_dual_simplex, LPX_K_DUAL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:498:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_dual_simplex, LPX_K_DUAL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:498:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_dual_simplex, LPX_K_DUAL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:498:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_dual_simplex, LPX_K_DUAL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:498:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_dual_simplex, LPX_K_DUAL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:498:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_dual_simplex, LPX_K_DUAL);
#  ^~~~~~~~~~~~~~
# In file included from /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:24:0,
#                  from glpk_stubs.c:23:
# glpk_stubs.c:498:34: error: 'LPX_K_DUAL' undeclared (first use in this function); did you mean 'GLP_DUAL'?
#  BIND_INT_PARAM(use_dual_simplex, LPX_K_DUAL);
#                                   ^
# /home/opam/.opam/4.06/lib/ocaml/caml/mlvalues.h:73:47: note: in definition of macro 'Val_long'
#  #define Val_long(x)     ((intnat) (((uintnat)(x) << 1)) + 1)
#                                                ^
# glpk_stubs.c:473:10: note: in expansion of macro 'Val_int'
#    return Val_int(lpx_get_int_parm(lp, param)); \
#           ^~~~~~~
# glpk_stubs.c:498:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_dual_simplex, LPX_K_DUAL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_set_use_dual_simplex':
# glpk_stubs.c:477:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:498:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_dual_simplex, LPX_K_DUAL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:498:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_dual_simplex, LPX_K_DUAL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:498:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_dual_simplex, LPX_K_DUAL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:498:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_dual_simplex, LPX_K_DUAL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:498:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_dual_simplex, LPX_K_DUAL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:498:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_dual_simplex, LPX_K_DUAL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:498:34: error: 'LPX_K_DUAL' undeclared (first use in this function); did you mean 'GLP_DUAL'?
#  BIND_INT_PARAM(use_dual_simplex, LPX_K_DUAL);
#                                   ^
# glpk_stubs.c:478:24: note: in definition of macro 'BIND_INT_PARAM'
#    lpx_set_int_parm(lp, param, Int_val(n)); \
#                         ^~~~~
# glpk_stubs.c: In function 'ocaml_glpk_get_pricing':
# glpk_stubs.c:472:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:499:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(pricing, LPX_K_PRICE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:499:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(pricing, LPX_K_PRICE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:499:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(pricing, LPX_K_PRICE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:499:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(pricing, LPX_K_PRICE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:499:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(pricing, LPX_K_PRICE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:499:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(pricing, LPX_K_PRICE);
#  ^~~~~~~~~~~~~~
# In file included from /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:24:0,
#                  from glpk_stubs.c:23:
# glpk_stubs.c:499:25: error: 'LPX_K_PRICE' undeclared (first use in this function)
#  BIND_INT_PARAM(pricing, LPX_K_PRICE);
#                          ^
# /home/opam/.opam/4.06/lib/ocaml/caml/mlvalues.h:73:47: note: in definition of macro 'Val_long'
#  #define Val_long(x)     ((intnat) (((uintnat)(x) << 1)) + 1)
#                                                ^
# glpk_stubs.c:473:10: note: in expansion of macro 'Val_int'
#    return Val_int(lpx_get_int_parm(lp, param)); \
#           ^~~~~~~
# glpk_stubs.c:499:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(pricing, LPX_K_PRICE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_set_pricing':
# glpk_stubs.c:477:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:499:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(pricing, LPX_K_PRICE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:499:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(pricing, LPX_K_PRICE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:499:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(pricing, LPX_K_PRICE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:499:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(pricing, LPX_K_PRICE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:499:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(pricing, LPX_K_PRICE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:499:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(pricing, LPX_K_PRICE);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:499:25: error: 'LPX_K_PRICE' undeclared (first use in this function)
#  BIND_INT_PARAM(pricing, LPX_K_PRICE);
#                          ^
# glpk_stubs.c:478:24: note: in definition of macro 'BIND_INT_PARAM'
#    lpx_set_int_parm(lp, param, Int_val(n)); \
#                         ^~~~~
# glpk_stubs.c: In function 'ocaml_glpk_get_relaxation':
# glpk_stubs.c:485:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:500:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(relaxation, LPX_K_RELAX);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:485:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:500:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(relaxation, LPX_K_RELAX);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:485:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:500:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(relaxation, LPX_K_RELAX);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:485:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:500:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(relaxation, LPX_K_RELAX);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:485:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:500:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(relaxation, LPX_K_RELAX);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:485:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:500:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(relaxation, LPX_K_RELAX);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:486:16: warning: implicit declaration of function 'lpx_get_real_parm'; did you mean 'glp_get_col_prim'? [-Wimplicit-function-declaration]
#    double ans = lpx_get_real_parm(lp, param); \
#                 ^
# glpk_stubs.c:500:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(relaxation, LPX_K_RELAX);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:500:29: error: 'LPX_K_RELAX' undeclared (first use in this function); did you mean 'LPX_MAX'?
#  BIND_REAL_PARAM(relaxation, LPX_K_RELAX);
#                              ^
# glpk_stubs.c:486:38: note: in definition of macro 'BIND_REAL_PARAM'
#    double ans = lpx_get_real_parm(lp, param); \
#                                       ^~~~~
# glpk_stubs.c: In function 'ocaml_glpk_set_relaxation':
# glpk_stubs.c:491:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:500:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(relaxation, LPX_K_RELAX);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:491:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:500:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(relaxation, LPX_K_RELAX);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:491:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:500:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(relaxation, LPX_K_RELAX);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:491:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:500:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(relaxation, LPX_K_RELAX);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:491:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:500:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(relaxation, LPX_K_RELAX);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:491:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:500:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(relaxation, LPX_K_RELAX);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:492:3: warning: implicit declaration of function 'lpx_set_real_parm'; did you mean 'glp_get_col_prim'? [-Wimplicit-function-declaration]
#    lpx_set_real_parm(lp, param, Double_val(n)); \
#    ^
# glpk_stubs.c:500:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(relaxation, LPX_K_RELAX);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:500:29: error: 'LPX_K_RELAX' undeclared (first use in this function); did you mean 'LPX_MAX'?
#  BIND_REAL_PARAM(relaxation, LPX_K_RELAX);
#                              ^
# glpk_stubs.c:492:25: note: in definition of macro 'BIND_REAL_PARAM'
#    lpx_set_real_parm(lp, param, Double_val(n)); \
#                          ^~~~~
# glpk_stubs.c: In function 'ocaml_glpk_get_solution_rounding':
# glpk_stubs.c:472:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:505:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(solution_rounding, LPX_K_ROUND);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:505:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(solution_rounding, LPX_K_ROUND);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:505:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(solution_rounding, LPX_K_ROUND);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:505:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(solution_rounding, LPX_K_ROUND);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:505:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(solution_rounding, LPX_K_ROUND);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:505:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(solution_rounding, LPX_K_ROUND);
#  ^~~~~~~~~~~~~~
# In file included from /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:24:0,
#                  from glpk_stubs.c:23:
# glpk_stubs.c:505:35: error: 'LPX_K_ROUND' undeclared (first use in this function); did you mean 'GLP_EBOUND'?
#  BIND_INT_PARAM(solution_rounding, LPX_K_ROUND);
#                                    ^
# /home/opam/.opam/4.06/lib/ocaml/caml/mlvalues.h:73:47: note: in definition of macro 'Val_long'
#  #define Val_long(x)     ((intnat) (((uintnat)(x) << 1)) + 1)
#                                                ^
# glpk_stubs.c:473:10: note: in expansion of macro 'Val_int'
#    return Val_int(lpx_get_int_parm(lp, param)); \
#           ^~~~~~~
# glpk_stubs.c:505:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(solution_rounding, LPX_K_ROUND);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_set_solution_rounding':
# glpk_stubs.c:477:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:505:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(solution_rounding, LPX_K_ROUND);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:505:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(solution_rounding, LPX_K_ROUND);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:505:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(solution_rounding, LPX_K_ROUND);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:505:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(solution_rounding, LPX_K_ROUND);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:505:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(solution_rounding, LPX_K_ROUND);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:505:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(solution_rounding, LPX_K_ROUND);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:505:35: error: 'LPX_K_ROUND' undeclared (first use in this function); did you mean 'GLP_EBOUND'?
#  BIND_INT_PARAM(solution_rounding, LPX_K_ROUND);
#                                    ^
# glpk_stubs.c:478:24: note: in definition of macro 'BIND_INT_PARAM'
#    lpx_set_int_parm(lp, param, Int_val(n)); \
#                         ^~~~~
# glpk_stubs.c: In function 'ocaml_glpk_get_iteration_limit':
# glpk_stubs.c:472:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:506:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_limit, LPX_K_ITLIM);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:506:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_limit, LPX_K_ITLIM);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:506:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_limit, LPX_K_ITLIM);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:506:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_limit, LPX_K_ITLIM);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:506:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_limit, LPX_K_ITLIM);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:506:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_limit, LPX_K_ITLIM);
#  ^~~~~~~~~~~~~~
# In file included from /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:24:0,
#                  from glpk_stubs.c:23:
# glpk_stubs.c:506:33: error: 'LPX_K_ITLIM' undeclared (first use in this function); did you mean 'GLP_EITLIM'?
#  BIND_INT_PARAM(iteration_limit, LPX_K_ITLIM);
#                                  ^
# /home/opam/.opam/4.06/lib/ocaml/caml/mlvalues.h:73:47: note: in definition of macro 'Val_long'
#  #define Val_long(x)     ((intnat) (((uintnat)(x) << 1)) + 1)
#                                                ^
# glpk_stubs.c:473:10: note: in expansion of macro 'Val_int'
#    return Val_int(lpx_get_int_parm(lp, param)); \
#           ^~~~~~~
# glpk_stubs.c:506:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_limit, LPX_K_ITLIM);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_set_iteration_limit':
# glpk_stubs.c:477:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:506:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_limit, LPX_K_ITLIM);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:506:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_limit, LPX_K_ITLIM);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:506:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_limit, LPX_K_ITLIM);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:506:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_limit, LPX_K_ITLIM);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:506:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_limit, LPX_K_ITLIM);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:506:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_limit, LPX_K_ITLIM);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:506:33: error: 'LPX_K_ITLIM' undeclared (first use in this function); did you mean 'GLP_EITLIM'?
#  BIND_INT_PARAM(iteration_limit, LPX_K_ITLIM);
#                                  ^
# glpk_stubs.c:478:24: note: in definition of macro 'BIND_INT_PARAM'
#    lpx_set_int_parm(lp, param, Int_val(n)); \
#                         ^~~~~
# glpk_stubs.c: In function 'ocaml_glpk_get_iteration_count':
# glpk_stubs.c:472:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:507:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_count, LPX_K_ITCNT);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:507:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_count, LPX_K_ITCNT);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:507:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_count, LPX_K_ITCNT);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:507:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_count, LPX_K_ITCNT);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:507:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_count, LPX_K_ITCNT);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:507:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_count, LPX_K_ITCNT);
#  ^~~~~~~~~~~~~~
# In file included from /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:24:0,
#                  from glpk_stubs.c:23:
# glpk_stubs.c:507:33: error: 'LPX_K_ITCNT' undeclared (first use in this function); did you mean 'LPX_MIN'?
#  BIND_INT_PARAM(iteration_count, LPX_K_ITCNT);
#                                  ^
# /home/opam/.opam/4.06/lib/ocaml/caml/mlvalues.h:73:47: note: in definition of macro 'Val_long'
#  #define Val_long(x)     ((intnat) (((uintnat)(x) << 1)) + 1)
#                                                ^
# glpk_stubs.c:473:10: note: in expansion of macro 'Val_int'
#    return Val_int(lpx_get_int_parm(lp, param)); \
#           ^~~~~~~
# glpk_stubs.c:507:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_count, LPX_K_ITCNT);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_set_iteration_count':
# glpk_stubs.c:477:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:507:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_count, LPX_K_ITCNT);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:507:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_count, LPX_K_ITCNT);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:507:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_count, LPX_K_ITCNT);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:507:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_count, LPX_K_ITCNT);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:507:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_count, LPX_K_ITCNT);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:507:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(iteration_count, LPX_K_ITCNT);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:507:33: error: 'LPX_K_ITCNT' undeclared (first use in this function); did you mean 'LPX_MIN'?
#  BIND_INT_PARAM(iteration_count, LPX_K_ITCNT);
#                                  ^
# glpk_stubs.c:478:24: note: in definition of macro 'BIND_INT_PARAM'
#    lpx_set_int_parm(lp, param, Int_val(n)); \
#                         ^~~~~
# glpk_stubs.c: In function 'ocaml_glpk_get_time_limit':
# glpk_stubs.c:485:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:508:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(time_limit, LPX_K_TMLIM);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:485:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:508:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(time_limit, LPX_K_TMLIM);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:485:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:508:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(time_limit, LPX_K_TMLIM);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:485:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:508:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(time_limit, LPX_K_TMLIM);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:485:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:508:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(time_limit, LPX_K_TMLIM);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:485:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:508:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(time_limit, LPX_K_TMLIM);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:508:29: error: 'LPX_K_TMLIM' undeclared (first use in this function); did you mean 'GLP_ETMLIM'?
#  BIND_REAL_PARAM(time_limit, LPX_K_TMLIM);
#                              ^
# glpk_stubs.c:486:38: note: in definition of macro 'BIND_REAL_PARAM'
#    double ans = lpx_get_real_parm(lp, param); \
#                                       ^~~~~
# glpk_stubs.c: In function 'ocaml_glpk_set_time_limit':
# glpk_stubs.c:491:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:508:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(time_limit, LPX_K_TMLIM);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:491:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:508:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(time_limit, LPX_K_TMLIM);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:491:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:508:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(time_limit, LPX_K_TMLIM);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:491:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:508:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(time_limit, LPX_K_TMLIM);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:491:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:508:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(time_limit, LPX_K_TMLIM);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:491:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:508:1: note: in expansion of macro 'BIND_REAL_PARAM'
#  BIND_REAL_PARAM(time_limit, LPX_K_TMLIM);
#  ^~~~~~~~~~~~~~~
# glpk_stubs.c:508:29: error: 'LPX_K_TMLIM' undeclared (first use in this function); did you mean 'GLP_ETMLIM'?
#  BIND_REAL_PARAM(time_limit, LPX_K_TMLIM);
#                              ^
# glpk_stubs.c:492:25: note: in definition of macro 'BIND_REAL_PARAM'
#    lpx_set_real_parm(lp, param, Double_val(n)); \
#                          ^~~~~
# glpk_stubs.c: In function 'ocaml_glpk_get_branching_heuristic':
# glpk_stubs.c:472:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:509:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(branching_heuristic, LPX_K_BRANCH);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:509:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(branching_heuristic, LPX_K_BRANCH);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:509:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(branching_heuristic, LPX_K_BRANCH);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:509:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(branching_heuristic, LPX_K_BRANCH);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:509:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(branching_heuristic, LPX_K_BRANCH);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:509:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(branching_heuristic, LPX_K_BRANCH);
#  ^~~~~~~~~~~~~~
# In file included from /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:24:0,
#                  from glpk_stubs.c:23:
# glpk_stubs.c:509:37: error: 'LPX_K_BRANCH' undeclared (first use in this function); did you mean 'GLP_IBRANCH'?
#  BIND_INT_PARAM(branching_heuristic, LPX_K_BRANCH);
#                                      ^
# /home/opam/.opam/4.06/lib/ocaml/caml/mlvalues.h:73:47: note: in definition of macro 'Val_long'
#  #define Val_long(x)     ((intnat) (((uintnat)(x) << 1)) + 1)
#                                                ^
# glpk_stubs.c:473:10: note: in expansion of macro 'Val_int'
#    return Val_int(lpx_get_int_parm(lp, param)); \
#           ^~~~~~~
# glpk_stubs.c:509:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(branching_heuristic, LPX_K_BRANCH);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_set_branching_heuristic':
# glpk_stubs.c:477:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:509:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(branching_heuristic, LPX_K_BRANCH);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:509:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(branching_heuristic, LPX_K_BRANCH);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:509:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(branching_heuristic, LPX_K_BRANCH);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:509:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(branching_heuristic, LPX_K_BRANCH);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:509:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(branching_heuristic, LPX_K_BRANCH);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:509:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(branching_heuristic, LPX_K_BRANCH);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:509:37: error: 'LPX_K_BRANCH' undeclared (first use in this function); did you mean 'GLP_IBRANCH'?
#  BIND_INT_PARAM(branching_heuristic, LPX_K_BRANCH);
#                                      ^
# glpk_stubs.c:478:24: note: in definition of macro 'BIND_INT_PARAM'
#    lpx_set_int_parm(lp, param, Int_val(n)); \
#                         ^~~~~
# glpk_stubs.c: In function 'ocaml_glpk_get_backtracking_heuristic':
# glpk_stubs.c:472:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:510:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(backtracking_heuristic, LPX_K_BTRACK);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:510:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(backtracking_heuristic, LPX_K_BTRACK);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:510:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(backtracking_heuristic, LPX_K_BTRACK);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:510:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(backtracking_heuristic, LPX_K_BTRACK);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:510:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(backtracking_heuristic, LPX_K_BTRACK);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:510:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(backtracking_heuristic, LPX_K_BTRACK);
#  ^~~~~~~~~~~~~~
# In file included from /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:24:0,
#                  from glpk_stubs.c:23:
# glpk_stubs.c:510:40: error: 'LPX_K_BTRACK' undeclared (first use in this function)
#  BIND_INT_PARAM(backtracking_heuristic, LPX_K_BTRACK);
#                                         ^
# /home/opam/.opam/4.06/lib/ocaml/caml/mlvalues.h:73:47: note: in definition of macro 'Val_long'
#  #define Val_long(x)     ((intnat) (((uintnat)(x) << 1)) + 1)
#                                                ^
# glpk_stubs.c:473:10: note: in expansion of macro 'Val_int'
#    return Val_int(lpx_get_int_parm(lp, param)); \
#           ^~~~~~~
# glpk_stubs.c:510:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(backtracking_heuristic, LPX_K_BTRACK);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_set_backtracking_heuristic':
# glpk_stubs.c:477:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:510:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(backtracking_heuristic, LPX_K_BTRACK);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:510:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(backtracking_heuristic, LPX_K_BTRACK);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:510:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(backtracking_heuristic, LPX_K_BTRACK);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:510:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(backtracking_heuristic, LPX_K_BTRACK);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:510:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(backtracking_heuristic, LPX_K_BTRACK);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:510:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(backtracking_heuristic, LPX_K_BTRACK);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:510:40: error: 'LPX_K_BTRACK' undeclared (first use in this function)
#  BIND_INT_PARAM(backtracking_heuristic, LPX_K_BTRACK);
#                                         ^
# glpk_stubs.c:478:24: note: in definition of macro 'BIND_INT_PARAM'
#    lpx_set_int_parm(lp, param, Int_val(n)); \
#                         ^~~~~
# glpk_stubs.c: In function 'ocaml_glpk_get_use_presolver':
# glpk_stubs.c:472:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:511:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_presolver, LPX_K_PRESOL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:511:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_presolver, LPX_K_PRESOL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:511:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_presolver, LPX_K_PRESOL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:511:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_presolver, LPX_K_PRESOL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:511:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_presolver, LPX_K_PRESOL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:472:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:511:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_presolver, LPX_K_PRESOL);
#  ^~~~~~~~~~~~~~
# In file included from /home/opam/.opam/4.06/lib/ocaml/caml/alloc.h:24:0,
#                  from glpk_stubs.c:23:
# glpk_stubs.c:511:31: error: 'LPX_K_PRESOL' undeclared (first use in this function)
#  BIND_INT_PARAM(use_presolver, LPX_K_PRESOL);
#                                ^
# /home/opam/.opam/4.06/lib/ocaml/caml/mlvalues.h:73:47: note: in definition of macro 'Val_long'
#  #define Val_long(x)     ((intnat) (((uintnat)(x) << 1)) + 1)
#                                                ^
# glpk_stubs.c:473:10: note: in expansion of macro 'Val_int'
#    return Val_int(lpx_get_int_parm(lp, param)); \
#           ^~~~~~~
# glpk_stubs.c:511:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_presolver, LPX_K_PRESOL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c: In function 'ocaml_glpk_set_use_presolver':
# glpk_stubs.c:477:3: error: unknown type name 'LPX'
#    LPX *lp = Lpx_val(blp); \
#    ^
# glpk_stubs.c:511:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_presolver, LPX_K_PRESOL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:511:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_presolver, LPX_K_PRESOL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:511:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_presolver, LPX_K_PRESOL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:511:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_presolver, LPX_K_PRESOL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:511:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_presolver, LPX_K_PRESOL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:82:20: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                     ^
# glpk_stubs.c:477:13: note: in expansion of macro 'Lpx_val'
#    LPX *lp = Lpx_val(blp); \
#              ^~~~~~~
# glpk_stubs.c:511:1: note: in expansion of macro 'BIND_INT_PARAM'
#  BIND_INT_PARAM(use_presolver, LPX_K_PRESOL);
#  ^~~~~~~~~~~~~~
# glpk_stubs.c:511:31: error: 'LPX_K_PRESOL' undeclared (first use in this function)
#  BIND_INT_PARAM(use_presolver, LPX_K_PRESOL);
#                                ^
# glpk_stubs.c:478:24: note: in definition of macro 'BIND_INT_PARAM'
#    lpx_set_int_parm(lp, param, Int_val(n)); \
#                         ^~~~~
# glpk_stubs.c: In function 'ocaml_glpk_read_cplex':
# glpk_stubs.c:515:3: error: unknown type name 'LPX'
#    LPX *lp = lpx_read_cpxlp(String_val(fname));
#    ^~~
# glpk_stubs.c:515:13: warning: implicit declaration of function 'lpx_read_cpxlp'; did you mean 'glp_read_lp'? [-Wimplicit-function-declaration]
#    LPX *lp = lpx_read_cpxlp(String_val(fname));
#              ^~~~~~~~~~~~~~
#              glp_read_lp
# glpk_stubs.c:515:13: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
# glpk_stubs.c: In function 'ocaml_glpk_write_cplex':
# glpk_stubs.c:523:7: warning: implicit declaration of function 'lpx_write_cpxlp'; did you mean 'glp_write_lp'? [-Wimplicit-function-declaration]
#    if (lpx_write_cpxlp(Lpx_val(blp), String_val(fname)))
#        ^~~~~~~~~~~~~~~
#        glp_write_lp
# glpk_stubs.c:82:24: error: 'LPX' undeclared (first use in this function)
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ^
# glpk_stubs.c:523:23: note: in expansion of macro 'Lpx_val'
#    if (lpx_write_cpxlp(Lpx_val(blp), String_val(fname)))
#                        ^~~~~~~
# glpk_stubs.c:82:29: error: expected expression before ')' token
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                              ^
# glpk_stubs.c:523:23: note: in expansion of macro 'Lpx_val'
#    if (lpx_write_cpxlp(Lpx_val(blp), String_val(fname)))
#                        ^~~~~~~
# glpk_stubs.c:82:27: error: invalid operands to binary * (have 'int *' and 'int')
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                         ~  ^
# glpk_stubs.c:523:23: note: in expansion of macro 'Lpx_val'
#    if (lpx_write_cpxlp(Lpx_val(blp), String_val(fname)))
#                        ^~~~~~~
# glpk_stubs.c:82:23: error: called object is not a function or function pointer
#  #define Lpx_val(v) (*((LPX**)Data_custom_val(v)))
#                        ^
# glpk_stubs.c:523:23: note: in expansion of macro 'Lpx_val'
#    if (lpx_write_cpxlp(Lpx_val(blp), String_val(fname)))
#                        ^~~~~~~
# At top level:
# glpk_stubs.c:89:33: warning: 'lpx_ops' defined but not used [-Wunused-variable]
#  static struct custom_operations lpx_ops =
#                                  ^~~~~~~
# OCamlMakefile:1013: recipe for target 'glpk_stubs.o' failed
# make[2]: *** [glpk_stubs.o] Error 2
# make[2]: Leaving directory '/home/opam/.opam/4.06/.opam-switch/build/glpk.0.1.6/src'
# OCamlMakefile:716: recipe for target 'byte-code-library' failed
# make[1]: *** [byte-code-library] Error 2
# make[1]: Leaving directory '/home/opam/.opam/4.06/.opam-switch/build/glpk.0.1.6/src'
# Makefile:13: recipe for target 'byte' failed
# make: *** [byte] Error 2



<><> Error report <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
+- The following actions failed
| - build glpk 0.1.6
+- 
- No changes have been performed

The packages you requested declare the following system dependencies. Please make sure they are installed before retrying:
    libglpk-dev

# Run eval $(opam env) to update the current shell environment
31 1533425627 1533425639