$ opam depext -iy -j 2 stog-writing.0.11.0
# Detecting depexts using vars: arch=x86_64, os=linux, os-distribution=debian, os-family=debian
# The following system packages are needed:
m4
# All required OS packages found.
# Now letting OPAM install the packages
The following actions will be performed:
  - install result       1.3      [required by topkg]
  - install base-bytes   base     [required by ocamlnet]
  - install ocamlbuild   0.12.0   [required by menhir]
  - install topkg        0.9.1    [required by xmlm]
  - install ocamlnet     4.1.6    [required by stog]
  - install menhir       20180703 [required by stog-writing]
  - install camlp4       4.06+1   [required by config-file]
  - install xmlm         1.3.0    [required by stog]
  - install ulex         1.2      [required by higlo]
  - install config-file  1.2      [required by stog]
  - install xtmpl        0.10     [required by stog]
  - install higlo        0.4      [required by stog]
  - install stog         0.11.1   [required by stog-writing]
  - install stog-writing 0.11.0
===== 14 to install =====

<><> Gathering sources ><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
[camlp4.4.06+1] found in cache
[config-file.1.2] found in cache
[higlo.0.4] found in cache
[menhir.20180703] found in cache
[ocamlbuild.0.12.0] found in cache
[ocamlnet.4.1.6] found in cache
[result.1.3] found in cache
[stog.0.11.1] found in cache
[stog-writing.0.11.0] found in cache
[topkg.0.9.1] found in cache
[ulex.1.2] found in cache
[xmlm.1.3.0] found in cache
[xtmpl.0.10] found in cache

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> installed base-bytes.base
-> installed result.1.3
-> installed ocamlbuild.0.12.0
-> installed camlp4.4.06+1
-> installed config-file.1.2
-> installed menhir.20180703
-> installed topkg.0.9.1
-> installed ulex.1.2
-> installed xmlm.1.3.0
-> installed xtmpl.0.10
-> installed higlo.0.4
-> installed ocamlnet.4.1.6
[ERROR] The compilation of stog failed at "/usr/bin/make all".

#=== ERROR while compiling stog.0.11.1 ========================================#
# context              2.0.0~rc3 | linux/x86_64 | ocaml-variants.4.06.1+default-unsafe-string | git+file:///home/opam/opam-repository
# path                 ~/.opam/4.06+default-unsafe-string/.opam-switch/build/stog.0.11.1
# command              /usr/bin/make all
# exit-code            2
# env-file             ~/.opam/log/stog-11-b7b179.env
# output-file          ~/.opam/log/stog-11-b7b179.out
### output ###
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_msg.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_misc.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_highlight.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_config.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_trie.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_tmap.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_graph.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_path.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_filter_types.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_types.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_intl.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_find.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_tags.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_io.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_info.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_ocaml_types.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_deps.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_tmpl.mli
# ocamlyacc -v stog_filter_parser.mly
# 6 shift/reduce conflicts.
# make: Circular stog_filter_parser.cmi <- stog_filter_parser.cmi dependency dropped.
# if test -f `dirname stog_filter_parser.ml`/`basename stog_filter_parser.ml .ml`.mli && test ! -f `dirname stog_filter_parser.ml`/`basename stog_filter_parser.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_filter_parser.ml`/`basename stog_filter_parser.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_filter_parser.ml
# ocamllex stog_filter_lexer.mll
# 22 states, 335 transitions, table size 1472 bytes
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -i stog_filter_lexer.ml > stog_filter_lexer.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_filter_lexer.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_filter.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_html5.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_engine.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_ocaml.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_svg.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_of_latex.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_latex.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_cut.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_list.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_html.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_blocks.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_plug.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_dyn.mli
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_msg.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_misc.ml
# File "stog_misc.ml", line 118, characters 10-23:
# Warning 3: deprecated: String.create
# Use Bytes.create instead.
# File "stog_misc.ml", line 184, characters 13-27:
# Warning 3: deprecated: Char.lowercase
# Use Char.lowercase_ascii instead.
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_highlight.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_config.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_trie.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_tmap.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_graph.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_path.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_filter_types.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_types.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_intl.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_find.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_tags.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_io.ml
# File "stog_io.ml", line 65, characters 8-24:
# Warning 3: deprecated: String.lowercase
# Use String.lowercase_ascii instead.
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_info.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_ocaml_types.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_deps.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_tmpl.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_filter_parser.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_filter_lexer.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_filter.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_html5.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_engine.ml
# File "stog_engine.ml", line 572, characters 14-30:
# Warning 3: deprecated: String.lowercase
# Use String.lowercase_ascii instead.
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_ocaml.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_svg.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_of_latex.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_latex.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_cut.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_list.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_html.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_blocks.ml
# File "stog_blocks.ml", line 277, characters 14-31:
# Warning 3: deprecated: String.capitalize
# Use String.capitalize_ascii instead.
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_plug.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_dyn.ml
# ocamlfind ocamlopt -a -o stog.cmxa stog_msg.cmx stog_misc.cmx stog_highlight.cmx stog_config.cmx stog_trie.cmx stog_tmap.cmx stog_graph.cmx stog_path.cmx stog_filter_types.cmx stog_types.cmx stog_intl.cmx stog_find.cmx stog_tags.cmx stog_io.cmx stog_info.cmx stog_ocaml_types.cmx stog_deps.cmx stog_tmpl.cmx stog_filter_parser.cmx stog_filter_lexer.cmx stog_filter.cmx stog_html5.cmx stog_engine.cmx stog_ocaml.cmx stog_svg.cmx stog_of_latex.cmx stog_latex.cmx stog_cut.cmx stog_list.cmx stog_html.cmx stog_blocks.cmx stog_plug.cmx stog_dyn.cmx
# ocamlfind ocamlopt -shared -o stog.cmxs stog_msg.cmx stog_misc.cmx stog_highlight.cmx stog_config.cmx stog_trie.cmx stog_tmap.cmx stog_graph.cmx stog_path.cmx stog_filter_types.cmx stog_types.cmx stog_intl.cmx stog_find.cmx stog_tags.cmx stog_io.cmx stog_info.cmx stog_ocaml_types.cmx stog_deps.cmx stog_tmpl.cmx stog_filter_parser.cmx stog_filter_lexer.cmx stog_filter.cmx stog_html5.cmx stog_engine.cmx stog_ocaml.cmx stog_svg.cmx stog_of_latex.cmx stog_latex.cmx stog_cut.cmx stog_list.cmx stog_html.cmx stog_blocks.cmx stog_plug.cmx stog_dyn.cmx
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_main.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers -verbose -linkall -linkpkg -o stog -I +ocamldoc -annot -rectypes -g  stog.cmxa stog_main.cmx
# Effective set of compiler predicates: pkg_xmlm,pkg_str,pkg_xtmpl,pkg_unix,pkg_bytes,pkg_bigarray,pkg_netsys,pkg_netstring,pkg_config-file,pkg_dynlink,pkg_camlp4,pkg_ulex,pkg_higlo,pkg_higlo.ocaml,pkg_higlo.xml,pkg_higlo.lexers,autolink,native
# + ocamlopt.opt -verbose -linkall -o stog -I /home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/ocamldoc -annot -rectypes -g -I /home/opam/.opam/4.06+default-unsafe-string/lib/xmlm -I /home/opam/.opam/4.06+default-unsafe-string/lib/xtmpl -I /home/opam/.opam/4.06+default-unsafe-string/lib/bytes -I /home/opam/.opam/4.06+default-unsafe-string/lib/netsys -I /home/opam/.opam/4.06+default-unsafe-string/lib/netstring -I /home/opam/.opam/4.06+default-unsafe-string/lib/config-file -I /home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/camlp4 -I /home/opam/.opam/4.06+default-unsafe-string/lib/ulex -I /home/opam/.opam/4.06+default-unsafe-string/lib/higlo /home/opam/.opam/4.06+default-unsafe-string/lib/xmlm/xmlm.cmxa /home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/str.cmxa /home/opam/.opam/4.06+default-unsafe-string/lib/xtmpl/xtmpl.cmx /home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/unix.cmxa /home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/bigarray.cmxa /home/opam/.opam/4.06+default-unsafe-string/lib/netsys/netsys_oothr.cmxa /home/opam/.opam/4.06+default-unsafe-string/lib/netsys/netsys.cmxa /home/opam/.opam/4.06+default-unsafe-string/lib/netstring/netstring.cmxa /home/opam/.opam/4.06+default-unsafe-string/lib/config-file/config_file.cmx /home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/dynlink.cmxa /home/opam/.opam/4.06+default-unsafe-string/lib/ulex/ulexing.cmxa /home/opam/.opam/4.06+default-unsafe-string/lib/higlo/higlo.cmx /home/opam/.opam/4.06+default-unsafe-string/lib/higlo/higlo_ocaml.cmx /home/opam/.opam/4.06+default-unsafe-string/lib/higlo/higlo_xml.cmx stog.cmxa stog_main.cmx
# + as -o '/tmp/camlstartup601253.o' '/tmp/camlstartupead598.s'
# + gcc -O2 -fno-strict-aliasing -fwrapv -Wall -fno-tree-vrp -D_FILE_OFFSET_BITS=64 -D_REENTRANT -DCAML_NAME_SPACE  -Wl,-E -o 'stog'   '-L/home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/ocamldoc' '-L/home/opam/.opam/4.06+default-unsafe-string/lib/xmlm' '-L/home/opam/.opam/4.06+default-unsafe-string/lib/xtmpl' '-L/home/opam/.opam/4.06+default-unsafe-string/lib/bytes' '-L/home/opam/.opam/4.06+default-unsafe-string/lib/netsys' '-L/home/opam/.opam/4.06+default-unsafe-string/lib/netstring' '-L/home/opam/.opam/4.06+default-unsafe-string/lib/config-file' '-L/home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/camlp4' '-L/home/opam/.opam/4.06+default-unsafe-string/lib/ulex' '-L/home/opam/.opam/4.06+default-unsafe-string/lib/higlo' '-L/home/opam/.opam/4.06+default-unsafe-string/lib/ocaml' -Wl,-E '/tmp/camlstartup601253.o' '/home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/std_exit.o' 'stog_main.o' 'stog.a' '/home/opam/.opam/4.06+default-unsafe-string/lib/higlo/higlo_xml.o' '/home/opam/.opam/4.06+default-unsafe-string/lib/higlo/higlo_ocaml.o' '/home/opam/.opam/4.06+default-unsafe-string/lib/higlo/higlo.o' '/home/opam/.opam/4.06+default-unsafe-string/lib/ulex/ulexing.a' '/home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/dynlink.a' '/home/opam/.opam/4.06+default-unsafe-string/lib/config-file/config_file.o' '/home/opam/.opam/4.06+default-unsafe-string/lib/netstring/netstring.a' '/home/opam/.opam/4.06+default-unsafe-string/lib/netsys/netsys.a' '/home/opam/.opam/4.06+default-unsafe-string/lib/netsys/netsys_oothr.a' '/home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/bigarray.a' '/home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/unix.a' '/home/opam/.opam/4.06+default-unsafe-string/lib/xtmpl/xtmpl.o' '/home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/str.a' '/home/opam/.opam/4.06+default-unsafe-string/lib/xmlm/xmlm.a' '/home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/stdlib.a' '-lnetsys' '-lrt' '-lpthread' '-lbigarray' '-lunix' '-lcamlstr' '/home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/libasmrun.a' -lm  -ldl
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c latex2stog.ml
# ocamlfind ocamlopt -o latex2stog -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers -linkall -linkpkg stog.cmxa latex2stog.cmx
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -shared -o plugins/plugin_example.cmxs plugins/plugin_example.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -shared -o plugins/stog_asy.cmxs plugins/stog_asy.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -shared -o plugins/stog_disqus.cmxs plugins/stog_disqus.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -shared -o plugins/stog_dot.cmxs plugins/stog_dot.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -shared -o plugins/stog_markdown.cmxs plugins/stog_markdown.ml
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -shared -o plugins/stog_multi_doc.cmxs plugins/stog_multi_doc.ml
# Creating mk-stog... done
# ocamlfind ocamlopt -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -shared -o odoc_stog.cmxs odoc_stog.ml
# File "odoc_stog.ml", line 228, characters 10-23:
# Warning 3: deprecated: String.create
# Use Bytes.create instead.
# if test -f `dirname stog_msg.ml`/`basename stog_msg.ml .ml`.mli && test ! -f `dirname stog_msg.ml`/`basename stog_msg.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_msg.ml`/`basename stog_msg.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_msg.ml
# if test -f `dirname stog_misc.ml`/`basename stog_misc.ml .ml`.mli && test ! -f `dirname stog_misc.ml`/`basename stog_misc.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_misc.ml`/`basename stog_misc.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_misc.ml
# File "stog_misc.ml", line 118, characters 10-23:
# Warning 3: deprecated: String.create
# Use Bytes.create instead.
# File "stog_misc.ml", line 184, characters 13-27:
# Warning 3: deprecated: Char.lowercase
# Use Char.lowercase_ascii instead.
# if test -f `dirname stog_highlight.ml`/`basename stog_highlight.ml .ml`.mli && test ! -f `dirname stog_highlight.ml`/`basename stog_highlight.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_highlight.ml`/`basename stog_highlight.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_highlight.ml
# if test -f `dirname stog_config.ml`/`basename stog_config.ml .ml`.mli && test ! -f `dirname stog_config.ml`/`basename stog_config.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_config.ml`/`basename stog_config.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_config.ml
# if test -f `dirname stog_trie.ml`/`basename stog_trie.ml .ml`.mli && test ! -f `dirname stog_trie.ml`/`basename stog_trie.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_trie.ml`/`basename stog_trie.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_trie.ml
# if test -f `dirname stog_tmap.ml`/`basename stog_tmap.ml .ml`.mli && test ! -f `dirname stog_tmap.ml`/`basename stog_tmap.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_tmap.ml`/`basename stog_tmap.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_tmap.ml
# if test -f `dirname stog_graph.ml`/`basename stog_graph.ml .ml`.mli && test ! -f `dirname stog_graph.ml`/`basename stog_graph.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_graph.ml`/`basename stog_graph.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_graph.ml
# if test -f `dirname stog_path.ml`/`basename stog_path.ml .ml`.mli && test ! -f `dirname stog_path.ml`/`basename stog_path.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_path.ml`/`basename stog_path.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_path.ml
# if test -f `dirname stog_filter_types.ml`/`basename stog_filter_types.ml .ml`.mli && test ! -f `dirname stog_filter_types.ml`/`basename stog_filter_types.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_filter_types.ml`/`basename stog_filter_types.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_filter_types.ml
# if test -f `dirname stog_types.ml`/`basename stog_types.ml .ml`.mli && test ! -f `dirname stog_types.ml`/`basename stog_types.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_types.ml`/`basename stog_types.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_types.ml
# if test -f `dirname stog_intl.ml`/`basename stog_intl.ml .ml`.mli && test ! -f `dirname stog_intl.ml`/`basename stog_intl.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_intl.ml`/`basename stog_intl.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_intl.ml
# if test -f `dirname stog_find.ml`/`basename stog_find.ml .ml`.mli && test ! -f `dirname stog_find.ml`/`basename stog_find.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_find.ml`/`basename stog_find.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_find.ml
# if test -f `dirname stog_tags.ml`/`basename stog_tags.ml .ml`.mli && test ! -f `dirname stog_tags.ml`/`basename stog_tags.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_tags.ml`/`basename stog_tags.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_tags.ml
# if test -f `dirname stog_io.ml`/`basename stog_io.ml .ml`.mli && test ! -f `dirname stog_io.ml`/`basename stog_io.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_io.ml`/`basename stog_io.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_io.ml
# File "stog_io.ml", line 65, characters 8-24:
# Warning 3: deprecated: String.lowercase
# Use String.lowercase_ascii instead.
# if test -f `dirname stog_info.ml`/`basename stog_info.ml .ml`.mli && test ! -f `dirname stog_info.ml`/`basename stog_info.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_info.ml`/`basename stog_info.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_info.ml
# if test -f `dirname stog_ocaml_types.ml`/`basename stog_ocaml_types.ml .ml`.mli && test ! -f `dirname stog_ocaml_types.ml`/`basename stog_ocaml_types.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_ocaml_types.ml`/`basename stog_ocaml_types.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_ocaml_types.ml
# if test -f `dirname stog_deps.ml`/`basename stog_deps.ml .ml`.mli && test ! -f `dirname stog_deps.ml`/`basename stog_deps.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_deps.ml`/`basename stog_deps.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_deps.ml
# if test -f `dirname stog_tmpl.ml`/`basename stog_tmpl.ml .ml`.mli && test ! -f `dirname stog_tmpl.ml`/`basename stog_tmpl.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_tmpl.ml`/`basename stog_tmpl.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_tmpl.ml
# if test -f `dirname stog_filter_lexer.ml`/`basename stog_filter_lexer.ml .ml`.mli && test ! -f `dirname stog_filter_lexer.ml`/`basename stog_filter_lexer.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_filter_lexer.ml`/`basename stog_filter_lexer.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_filter_lexer.ml
# if test -f `dirname stog_filter.ml`/`basename stog_filter.ml .ml`.mli && test ! -f `dirname stog_filter.ml`/`basename stog_filter.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_filter.ml`/`basename stog_filter.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_filter.ml
# if test -f `dirname stog_html5.ml`/`basename stog_html5.ml .ml`.mli && test ! -f `dirname stog_html5.ml`/`basename stog_html5.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_html5.ml`/`basename stog_html5.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_html5.ml
# if test -f `dirname stog_engine.ml`/`basename stog_engine.ml .ml`.mli && test ! -f `dirname stog_engine.ml`/`basename stog_engine.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_engine.ml`/`basename stog_engine.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_engine.ml
# File "stog_engine.ml", line 572, characters 14-30:
# Warning 3: deprecated: String.lowercase
# Use String.lowercase_ascii instead.
# if test -f `dirname stog_ocaml.ml`/`basename stog_ocaml.ml .ml`.mli && test ! -f `dirname stog_ocaml.ml`/`basename stog_ocaml.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_ocaml.ml`/`basename stog_ocaml.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_ocaml.ml
# if test -f `dirname stog_svg.ml`/`basename stog_svg.ml .ml`.mli && test ! -f `dirname stog_svg.ml`/`basename stog_svg.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_svg.ml`/`basename stog_svg.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_svg.ml
# if test -f `dirname stog_of_latex.ml`/`basename stog_of_latex.ml .ml`.mli && test ! -f `dirname stog_of_latex.ml`/`basename stog_of_latex.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_of_latex.ml`/`basename stog_of_latex.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_of_latex.ml
# if test -f `dirname stog_latex.ml`/`basename stog_latex.ml .ml`.mli && test ! -f `dirname stog_latex.ml`/`basename stog_latex.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_latex.ml`/`basename stog_latex.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_latex.ml
# if test -f `dirname stog_cut.ml`/`basename stog_cut.ml .ml`.mli && test ! -f `dirname stog_cut.ml`/`basename stog_cut.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_cut.ml`/`basename stog_cut.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_cut.ml
# if test -f `dirname stog_list.ml`/`basename stog_list.ml .ml`.mli && test ! -f `dirname stog_list.ml`/`basename stog_list.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_list.ml`/`basename stog_list.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_list.ml
# if test -f `dirname stog_html.ml`/`basename stog_html.ml .ml`.mli && test ! -f `dirname stog_html.ml`/`basename stog_html.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_html.ml`/`basename stog_html.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_html.ml
# if test -f `dirname stog_blocks.ml`/`basename stog_blocks.ml .ml`.mli && test ! -f `dirname stog_blocks.ml`/`basename stog_blocks.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_blocks.ml`/`basename stog_blocks.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_blocks.ml
# File "stog_blocks.ml", line 277, characters 14-31:
# Warning 3: deprecated: String.capitalize
# Use String.capitalize_ascii instead.
# if test -f `dirname stog_plug.ml`/`basename stog_plug.ml .ml`.mli && test ! -f `dirname stog_plug.ml`/`basename stog_plug.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_plug.ml`/`basename stog_plug.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_plug.ml
# if test -f `dirname stog_dyn.ml`/`basename stog_dyn.ml .ml`.mli && test ! -f `dirname stog_dyn.ml`/`basename stog_dyn.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_dyn.ml`/`basename stog_dyn.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_dyn.ml
# ocamlfind ocamlc -a -o stog.cma stog_msg.cmo stog_misc.cmo stog_highlight.cmo stog_config.cmo stog_trie.cmo stog_tmap.cmo stog_graph.cmo stog_path.cmo stog_filter_types.cmo stog_types.cmo stog_intl.cmo stog_find.cmo stog_tags.cmo stog_io.cmo stog_info.cmo stog_ocaml_types.cmo stog_deps.cmo stog_tmpl.cmo stog_filter_parser.cmo stog_filter_lexer.cmo stog_filter.cmo stog_html5.cmo stog_engine.cmo stog_ocaml.cmo stog_svg.cmo stog_of_latex.cmo stog_latex.cmo stog_cut.cmo stog_list.cmo stog_html.cmo stog_blocks.cmo stog_plug.cmo stog_dyn.cmo
# if test -f `dirname stog_main.ml`/`basename stog_main.ml .ml`.mli && test ! -f `dirname stog_main.ml`/`basename stog_main.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname stog_main.ml`/`basename stog_main.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_main.ml
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers -linkall -linkpkg -o stog.byte -I +ocamldoc -annot -rectypes -g  stog.cma stog_main.cmo
# if test -f `dirname latex2stog.ml`/`basename latex2stog.ml .ml`.mli && test ! -f `dirname latex2stog.ml`/`basename latex2stog.ml .ml`.cmi ; then \
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c `dirname latex2stog.ml`/`basename latex2stog.ml .ml`.mli; fi
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c latex2stog.ml
# ocamlfind ocamlc -o latex2stog.byte -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers -linkall -linkpkg stog.cma latex2stog.cmo
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c stog_ocaml_session.mli
# ocamlfind ocamlc -package xmlm,xtmpl,netstring,config-file,dynlink,unix,str,higlo.lexers  -I +ocamldoc -annot -rectypes -g  -c errors.mli
# ocamlfind ocamlc -package xtmpl,unix,str,compiler-libs.toplevel -I +ocamldoc -annot -rectypes -g  -c stog_ocaml_session.ml
# findlib: [WARNING] Interface errors.cmi occurs in several directories: ., /home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/compiler-libs
# findlib: [WARNING] Interface topdirs.cmi occurs in several directories: /home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/compiler-libs, /home/opam/.opam/4.06+default-unsafe-string/lib/ocaml
# ocamlfind ocamlc -package xtmpl,unix,str,compiler-libs.toplevel -linkpkg -linkall -o stog-ocaml-session -I +ocamldoc -annot -rectypes -g  stog_ocaml_types.cmo stog_misc.cmo stog_ocaml_session.cmo
# findlib: [WARNING] Interface errors.cmi occurs in several directories: ., /home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/compiler-libs
# findlib: [WARNING] Interface topdirs.cmi occurs in several directories: /home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/compiler-libs, /home/opam/.opam/4.06+default-unsafe-string/lib/ocaml
# File "_none_", line 1:
# Error: Files stog_ocaml_session.cmo
#        and /home/opam/.opam/4.06+default-unsafe-string/lib/ocaml/compiler-libs/ocamlbytecomp.cma(Errors)
#        make inconsistent assumptions over interface Errors
# Makefile:167: recipe for target 'stog-ocaml-session' failed
# make: *** [stog-ocaml-session] Error 2



<><> Error report <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
+- The following actions failed
| - build stog 0.11.1
+- 
+- The following changes have been performed (the rest was aborted)
| - install base-bytes  base
| - install camlp4      4.06+1
| - install config-file 1.2
| - install higlo       0.4
| - install menhir      20180703
| - install ocamlbuild  0.12.0
| - install ocamlnet    4.1.6
| - install result      1.3
| - install topkg       0.9.1
| - install ulex        1.2
| - install xmlm        1.3.0
| - install xtmpl       0.10
+- 
# Run eval $(opam env) to update the current shell environment

The former state can be restored with:
    opam switch import "/home/opam/.opam/4.06+default-unsafe-string/.opam-switch/backup/state-20180726005743.export"
31 1532566659 1532566972