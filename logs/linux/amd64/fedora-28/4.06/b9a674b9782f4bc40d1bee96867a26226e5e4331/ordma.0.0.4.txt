$ opam depext -iy -j 2 ordma.0.0.4
# Detecting depexts using vars: arch=x86_64, os=linux, os-distribution=fedora, os-family=fedora
# The following system packages are needed:
m4
Name        : m4
Version     : 1.4.18
Release     : 6.fc28
Architecture: x86_64
Install Date: Fri Jul 27 20:10:18 2018
Group       : Applications/Text
Size        : 372272
License     : GPLv3+
Signature   : RSA/SHA256, Sun Feb 25 11:01:47 2018, Key ID e08e7e629db62fb1
Source RPM  : m4-1.4.18-6.fc28.src.rpm
Build Date  : Sun Feb 25 10:58:14 2018
Build Host  : buildvm-25.phx2.fedoraproject.org
Relocations : (not relocatable)
Packager    : Fedora Project
Vendor      : Fedora Project
URL         : http://www.gnu.org/software/m4/
Bug URL     : https://bugz.fedoraproject.org/m4
Summary     : The GNU macro processor
Description :
A GNU implementation of the traditional UNIX macro processor.  M4 is
useful for writing text files which can be logically parsed, and is used
by many programs as part of their build process.  M4 has built-in
functions for including files, running shell commands, doing arithmetic,
etc.  The autoconf program needs m4 for generating configure scripts, but
not for running configure scripts.

Install m4 if you need a macro processor.
# All required OS packages found.
# Now letting OPAM install the packages
The following actions will be performed:
  - install result     1.3    [required by lwt]
  - install base-bytes base   [required by cppo]
  - install ocamlbuild 0.12.0 [required by ordma]
  - install cppo       1.6.4  [required by lwt]
  - install lwt        4.1.0  [required by ordma] For the PPX, please install package lwt_ppx
  - install lwt_log    1.1.0  [required by ordma]
  - install ordma      0.0.4
===== 7 to install =====

<><> Gathering sources ><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
[cppo.1.6.4] found in cache
[lwt.4.1.0] found in cache
[lwt_log.1.1.0] found in cache
[ocamlbuild.0.12.0] found in cache
[ordma.0.0.4] found in cache
[result.1.3] found in cache

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> installed base-bytes.base
-> installed cppo.1.6.4
-> installed result.1.3
-> installed ocamlbuild.0.12.0
-> installed lwt.4.1.0
-> installed lwt_log.1.1.0
[ERROR] The installation of ordma failed at "make install".

#=== ERROR while installing ordma.0.0.4 =======================================#
# context              2.0.0~rc3 | linux/x86_64 | ocaml-base-compiler.4.06.1 | git+file:///home/opam/opam-repository
# path                 ~/.opam/4.06/.opam-switch/build/ordma.0.0.4
# command              /usr/bin/make install
# exit-code            2
# env-file             ~/.opam/log/ordma-10-6641cb.env
# output-file          ~/.opam/log/ordma-10-6641cb.out
### output ###
# ocamlbuild -use-ocamlfind \
# libordma_c.a \
# libordma.cma \
# libordma.cmxa \
# libordma.cmxs
# ocamlfind ocamlopt unix.cmxa -I /home/opam/.opam/4.06/lib/ocamlbuild /home/opam/.opam/4.06/lib/ocamlbuild/ocamlbuildlib.cmxa -linkpkg myocamlbuild.ml /home/opam/.opam/4.06/lib/ocamlbuild/ocamlbuild.cmx -o myocamlbuild
# ocamlfind ocamlc -g -thread -ccopt -Wall -ccopt -Wextra -ccopt -Werror -ccopt -ggdb3 -ccopt -O2 -package lwt -package lwt.unix -package lwt_log -package unix -c ordma_sendrecv.c
# + ocamlfind ocamlc -g -thread -ccopt -Wall -ccopt -Wextra -ccopt -Werror -ccopt -ggdb3 -ccopt -O2 -package lwt -package lwt.unix -package lwt_log -package unix -c ordma_sendrecv.c
# ordma_sendrecv.c:25:10: fatal error: rdma/rsocket.h: No such file or directory
#  #include <rdma/rsocket.h>
#           ^~~~~~~~~~~~~~~~
# compilation terminated.
# Command exited with code 2.
# make: *** [Makefile:5: lib] Error 10



<><> Error report <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
+- The following actions failed
| - install ordma 0.0.4
+- 
+- The following changes have been performed
| - install base-bytes base
| - install cppo       1.6.4
| - install lwt        4.1.0
| - install lwt_log    1.1.0
| - install ocamlbuild 0.12.0
| - install result     1.3
+- 
# Run eval $(opam env) to update the current shell environment

The former state can be restored with:
    opam switch import "/home/opam/.opam/4.06/.opam-switch/backup/state-20180728030452.export"
31 1532747089 1532747108