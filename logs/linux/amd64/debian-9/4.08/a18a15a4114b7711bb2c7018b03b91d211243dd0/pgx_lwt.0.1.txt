$ opam depext -iy -j 2 pgx_lwt.0.1
# Detecting depexts using vars: arch=x86_64, os=linux, os-distribution=debian, os-family=debian
# The following system packages are needed:
m4
# All required OS packages found.
# Now letting OPAM install the packages
The following actions will be performed:
  - install re                      1.7.3   [required by pgx]
  - install base-bytes              base    [required by cppo, uuidm]
  - install num                     1.1     [required by sexplib]
  - install octavius                1.2.0   [required by ppx_js_style]
  - install ocaml-compiler-libs     v0.11.0 [required by ppxlib]
  - install sexplib0                v0.11.0 [required by sexplib]
  - install ppx_derivers            1.0     [required by ppxlib]
  - install result                  1.3     [required by lwt]
  - install ocamlbuild              0.12.0  [required by uuidm]
  - install cppo                    1.6.4   [required by lwt]
  - install parsexp                 v0.11.0 [required by sexplib]
  - install base                    v0.11.1 [required by ppx_sexp_value, ppx_optional, ppx_let, etc.]
  - install ocaml-migrate-parsetree 1.0.11  [required by bisect_ppx, ppx_jane]
  - install topkg                   0.9.1   [required by uuidm]
  - install lwt                     4.1.0   [required by pgx_lwt]                                      For the PPX, please install package lwt_ppx
                                                                                                       For Lwt_log and Lwt_daemon, please install package lwt_log
  - install sexplib                 v0.11.0 [required by pgx]
  - install typerep                 v0.11.0 [required by ppx_typerep_conv]
  - install stdio                   v0.11.0 [required by ppx_expect, ppx_optcomp]
  - install ppx_tools_versioned     5.2     [required by bisect_ppx]
  - install uuidm                   0.9.6   [required by pgx]
  - install ppxlib                  0.3.0   [required by ppx_jane]
  - install bisect_ppx              1.3.4   [required by pgx]
  - install variantslib             v0.11.0 [required by ppx_variants_conv]
  - install ppx_typerep_conv        v0.11.1 [required by ppx_jane]
  - install ppx_sexp_conv           v0.11.2 [required by ppx_sexp_message, ppx_base, ppx_assert, etc.]
  - install ppx_pipebang            v0.11.0 [required by ppx_jane]
  - install ppx_optional            v0.11.0 [required by ppx_jane]
  - install ppx_optcomp             v0.11.0 [required by ppx_jane]
  - install ppx_let                 v0.11.0 [required by ppx_jane]
  - install ppx_js_style            v0.11.0 [required by ppx_base]
  - install ppx_inline_test         v0.11.0 [required by ppx_jane]
  - install ppx_here                v0.11.0 [required by ppx_jane]
  - install ppx_enumerate           v0.11.1 [required by ppx_base]
  - install ppx_compare             v0.11.1 [required by ppx_base, ppx_assert, ppx_expect]
  - install fieldslib               v0.11.0 [required by ppx_fields_conv]
  - install ppx_variants_conv       v0.11.1 [required by ppx_jane]
  - install ppx_custom_printf       v0.11.0 [required by ppx_jane]
  - install ppx_bench               v0.11.0 [required by ppx_jane]
  - install ppx_sexp_value          v0.11.0 [required by ppx_jane]
  - install ppx_sexp_message        v0.11.0 [required by ppx_jane]
  - install ppx_fail                v0.11.0 [required by ppx_jane]
  - install ppx_hash                v0.11.1 [required by ppx_base]
  - install ppx_assert              v0.11.0 [required by ppx_jane]
  - install ppx_fields_conv         v0.11.0 [required by ppx_jane]
  - install ppx_base                v0.11.0 [required by ppx_jane]
  - install ppx_expect              v0.11.0 [required by ppx_jane]
  - install bin_prot                v0.11.0 [required by ppx_bin_prot]
  - install ppx_bin_prot            v0.11.1 [required by ppx_jane]
  - install ppx_jane                v0.11.0 [required by pgx_lwt]
  - install pgx                     0.1     [required by pgx_lwt]
  - install pgx_lwt                 0.1
===== 51 to install =====

<><> Gathering sources ><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
[base.v0.11.1] found in cache
[bin_prot.v0.11.0] found in cache
[bisect_ppx.1.3.4] found in cache
[cppo.1.6.4] found in cache
[fieldslib.v0.11.0] found in cache
[lwt.4.1.0] found in cache
[num.1.1] found in cache
[ocaml-compiler-libs.v0.11.0] found in cache
[ocaml-migrate-parsetree.1.0.11] found in cache
[ocamlbuild.0.12.0] found in cache
[octavius.1.2.0] found in cache
[parsexp.v0.11.0] found in cache
[pgx.0.1] found in cache
[pgx_lwt.0.1] found in cache
[ppx_assert.v0.11.0] found in cache
[ppx_base.v0.11.0] found in cache
[ppx_bench.v0.11.0] found in cache
[ppx_bin_prot.v0.11.1] found in cache
[ppx_compare.v0.11.1] found in cache
[ppx_custom_printf.v0.11.0] found in cache
[ppx_derivers.1.0] found in cache
[ppx_enumerate.v0.11.1] found in cache
[ppx_expect.v0.11.0] found in cache
[ppx_fail.v0.11.0] found in cache
[ppx_fields_conv.v0.11.0] found in cache
[ppx_hash.v0.11.1] found in cache
[ppx_here.v0.11.0] found in cache
[ppx_inline_test.v0.11.0] found in cache
[ppx_jane.v0.11.0] found in cache
[ppx_js_style.v0.11.0] found in cache
[ppx_let.v0.11.0] found in cache
[ppx_optcomp.v0.11.0] found in cache
[ppx_optional.v0.11.0] found in cache
[ppx_pipebang.v0.11.0] found in cache
[ppx_sexp_conv.v0.11.2] found in cache
[ppx_sexp_message.v0.11.0] found in cache
[ppx_sexp_value.v0.11.0] found in cache
[ppx_tools_versioned.5.2] found in cache
[ppx_typerep_conv.v0.11.1] found in cache
[ppx_variants_conv.v0.11.1] found in cache
[ppxlib.0.3.0] found in cache
[re.1.7.3] found in cache
[result.1.3] found in cache
[sexplib.v0.11.0] found in cache
[sexplib0.v0.11.0] found in cache
[stdio.v0.11.0] found in cache
[topkg.0.9.1] found in cache
[typerep.v0.11.0] found in cache
[uuidm.0.9.6] found in cache
[variantslib.v0.11.0] found in cache

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
[ERROR] The compilation of ocamlbuild failed at "/usr/bin/make check-if-preinstalled all opam-install".
-> installed base-bytes.base
-> installed num.1.1
-> installed ocaml-compiler-libs.v0.11.0
-> installed octavius.1.2.0
-> installed ppx_derivers.1.0
-> installed re.1.7.3
-> installed result.1.3
-> installed cppo.1.6.4
[ERROR] The compilation of ocaml-migrate-parsetree failed at "/home/opam/.opam/4.08/bin/jbuilder build -p ocaml-migrate-parsetree -j 71".
-> installed sexplib0.v0.11.0
-> installed lwt.4.1.0
-> installed parsexp.v0.11.0
-> installed base.v0.11.1
-> installed sexplib.v0.11.0
-> installed stdio.v0.11.0
-> installed typerep.v0.11.0

#=== ERROR while compiling ocamlbuild.0.12.0 ==================================#
# context              2.0.0 | linux/x86_64 | ocaml-variants.4.08.0+trunk | git+file:///home/opam/opam-repository
# path                 ~/.opam/4.08/.opam-switch/build/ocamlbuild.0.12.0
# command              /usr/bin/make check-if-preinstalled all opam-install
# exit-code            2
# env-file             ~/.opam/log/ocamlbuild-11-f9bace.env
# output-file          ~/.opam/log/ocamlbuild-11-f9bace.out
### output ###
# if test -d /home/opam/.opam/4.08/lib/ocaml/ocamlbuild; then\
#   >&2 echo "ERROR: Preinstalled ocamlbuild detected at"\
#        "/home/opam/.opam/4.08/lib/ocaml/ocamlbuild";\
#   >&2 echo "Installation aborted; if you want to bypass this"\
#         "safety check, pass CHECK_IF_PREINSTALLED=false to make";\
#   exit 2;\
# fi
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/const.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/loc.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/loc.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/discard_printf.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/discard_printf.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/signatures.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/my_std.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/my_std.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/my_unix.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/my_unix.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/tags.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/tags.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/display.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/display.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/log.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/log.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/shell.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/shell.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/bool.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/bool.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/glob_ast.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/glob_ast.ml
# ocamllex.opt src/glob_lexer.mll
# 55 states, 419 transitions, table size 2006 bytes
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/glob_lexer.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/glob_lexer.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/glob.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/glob.ml
# ocamllex.opt src/lexers.mll
# 251 states, 1051 transitions, table size 5710 bytes
# 4334 additional bytes used for bindings
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/lexers.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/lexers.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/param_tags.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/param_tags.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/command.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/command.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/ocamlbuild_config.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/ocamlbuild_where.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/ocamlbuild_where.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/slurp.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/slurp.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/options.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/options.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/pathname.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/pathname.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/configuration.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/configuration.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/flags.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/flags.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/hygiene.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/hygiene.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/digest_cache.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/digest_cache.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/resource.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/resource.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/rule.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/rule.ml
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/solver.mli
# ocamlc.opt -w L -w R -w Z -I src -I +unix -safe-string -bin-annot -c src/solver.ml
# File "src/solver.ml", line 43, characters 31-32:
# Error: This expression has type int but an expression was expected of type
#          ('a -> 'b -> 'c -> 'd -> 'e -> 'f, Format.formatter, unit,
#           Format.formatter -> unit)
#          format4 =
#            ('a -> 'b -> 'c -> 'd -> 'e -> 'f, Format.formatter, unit, 
#             unit, unit, Format.formatter -> unit)
#            CamlinternalFormatBasics.format6
# Makefile:422: recipe for target 'src/solver.cmo' failed
# make: *** [src/solver.cmo] Error 2


#=== ERROR while compiling ocaml-migrate-parsetree.1.0.11 =====================#
# context              2.0.0 | linux/x86_64 | ocaml-variants.4.08.0+trunk | git+file:///home/opam/opam-repository
# path                 ~/.opam/4.08/.opam-switch/build/ocaml-migrate-parsetree.1.0.11
# command              ~/.opam/4.08/bin/jbuilder build -p ocaml-migrate-parsetree -j 71
# exit-code            1
# env-file             ~/.opam/log/ocaml-migrate-parsetree-11-97ae00.env
# output-file          ~/.opam/log/ocaml-migrate-parsetree-11-97ae00.out
### output ###
#        ocaml src/ast-version,src/compiler-functions-file (exit 1)
# (cd _build/default/src && /home/opam/.opam/4.08/bin/ocaml config/gen.ml 4.08.0+dev0-2018-04-09)
# Unkown OCaml version 4.08.0+dev0-2018-04-09



<><> Error report <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
+- The following actions failed
| - build ocaml-migrate-parsetree 1.0.11
| - build ocamlbuild              0.12.0
+- 
+- The following changes have been performed (the rest was aborted)
| - install base                v0.11.1
| - install base-bytes          base
| - install cppo                1.6.4
| - install lwt                 4.1.0
| - install num                 1.1
| - install ocaml-compiler-libs v0.11.0
| - install octavius            1.2.0
| - install parsexp             v0.11.0
| - install ppx_derivers        1.0
| - install re                  1.7.3
| - install result              1.3
| - install sexplib             v0.11.0
| - install sexplib0            v0.11.0
| - install stdio               v0.11.0
| - install typerep             v0.11.0
+- 
# Run eval $(opam env) to update the current shell environment

The former state can be restored with:
    opam switch import "/home/opam/.opam/4.08/.opam-switch/backup/state-20180806002937.export"
31 1533515375 1533515423