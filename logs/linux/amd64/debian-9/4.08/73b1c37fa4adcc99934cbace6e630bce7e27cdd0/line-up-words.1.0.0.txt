$ opam depext -iy -j 2 line-up-words.1.0.0
# Detecting depexts using vars: arch=x86_64, os=linux, os-distribution=debian, os-family=debian
# The following system packages are needed:
libpcre3-dev
m4
pkg-config
# The following new OS packages need to be installed: libpcre3-dev pkg-config
The following command needs to be run through "sudo":
    apt-get install -qq -yy libpcre3-dev pkg-config
debconf: delaying package configuration, since apt-utils is not installed
Selecting previously unselected package libpcrecpp0v5:amd64.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 17681 files and directories currently installed.)
Preparing to unpack .../00-libpcrecpp0v5_2%3a8.39-3_amd64.deb ...
Unpacking libpcrecpp0v5:amd64 (2:8.39-3) ...
Selecting previously unselected package sgml-base.
Preparing to unpack .../01-sgml-base_1.29_all.deb ...
Unpacking sgml-base (1.29) ...
Selecting previously unselected package libicu57:amd64.
Preparing to unpack .../02-libicu57_57.1-6+deb9u2_amd64.deb ...
Unpacking libicu57:amd64 (57.1-6+deb9u2) ...
Selecting previously unselected package libxml2:amd64.
Preparing to unpack .../03-libxml2_2.9.4+dfsg1-2.2+deb9u2_amd64.deb ...
Unpacking libxml2:amd64 (2.9.4+dfsg1-2.2+deb9u2) ...
Selecting previously unselected package libglib2.0-0:amd64.
Preparing to unpack .../04-libglib2.0-0_2.50.3-2_amd64.deb ...
Unpacking libglib2.0-0:amd64 (2.50.3-2) ...
Selecting previously unselected package libglib2.0-data.
Preparing to unpack .../05-libglib2.0-data_2.50.3-2_all.deb ...
Unpacking libglib2.0-data (2.50.3-2) ...
Selecting previously unselected package libpcre16-3:amd64.
Preparing to unpack .../06-libpcre16-3_2%3a8.39-3_amd64.deb ...
Unpacking libpcre16-3:amd64 (2:8.39-3) ...
Selecting previously unselected package libpcre32-3:amd64.
Preparing to unpack .../07-libpcre32-3_2%3a8.39-3_amd64.deb ...
Unpacking libpcre32-3:amd64 (2:8.39-3) ...
Selecting previously unselected package libpcre3-dev:amd64.
Preparing to unpack .../08-libpcre3-dev_2%3a8.39-3_amd64.deb ...
Unpacking libpcre3-dev:amd64 (2:8.39-3) ...
Selecting previously unselected package pkg-config.
Preparing to unpack .../09-pkg-config_0.29-4+b1_amd64.deb ...
Unpacking pkg-config (0.29-4+b1) ...
Selecting previously unselected package shared-mime-info.
Preparing to unpack .../10-shared-mime-info_1.8-1+deb9u1_amd64.deb ...
Unpacking shared-mime-info (1.8-1+deb9u1) ...
Selecting previously unselected package xdg-user-dirs.
Preparing to unpack .../11-xdg-user-dirs_0.15-2+b1_amd64.deb ...
Unpacking xdg-user-dirs (0.15-2+b1) ...
Selecting previously unselected package xml-core.
Preparing to unpack .../12-xml-core_0.17_all.deb ...
Unpacking xml-core (0.17) ...
Setting up libglib2.0-0:amd64 (2.50.3-2) ...
No schema files found: doing nothing.
Setting up sgml-base (1.29) ...
Setting up libicu57:amd64 (57.1-6+deb9u2) ...
Setting up libxml2:amd64 (2.9.4+dfsg1-2.2+deb9u2) ...
Setting up pkg-config (0.29-4+b1) ...
Setting up libglib2.0-data (2.50.3-2) ...
Processing triggers for libc-bin (2.24-11+deb9u3) ...
Setting up shared-mime-info (1.8-1+deb9u1) ...
Setting up libpcrecpp0v5:amd64 (2:8.39-3) ...
Setting up libpcre32-3:amd64 (2:8.39-3) ...
Setting up libpcre16-3:amd64 (2:8.39-3) ...
Setting up xml-core (0.17) ...
Setting up xdg-user-dirs (0.15-2+b1) ...
Setting up libpcre3-dev:amd64 (2:8.39-3) ...
Processing triggers for libc-bin (2.24-11+deb9u3) ...
Processing triggers for sgml-base (1.29) ...
# OS packages installation successful
# Now letting OPAM install the packages
The following actions will be performed:
  - install jane-street-headers     v0.11.0 [required by core_kernel]
  - install base-bytes              base    [required by pcre]
  - install conf-pkg-config         1.1     [required by conf-libpcre]
  - install seq                     base    [required by re]
  - install num                     1.1     [required by sexplib]
  - install octavius                1.2.0   [required by ppx_js_style]
  - install spawn                   v0.12.0 [required by core]
  - install ocaml-compiler-libs     v0.11.0 [required by ppxlib]
  - install sexplib0                v0.11.0 [required by base]
  - install ppx_derivers            1.0     [required by ppxlib]
  - install result                  1.3     [required by ocaml-migrate-parsetree]
  - install conf-libpcre            1       [required by pcre]
  - install re                      1.8.0   [required by core_extended]
  - install parsexp                 v0.11.0 [required by sexplib]
  - install base                    v0.11.1 [required by core, pcre]
  - install ocaml-migrate-parsetree 1.0.11  [required by line-up-words]
  - install sexplib                 v0.11.0 [required by core, core_extended]
  - install typerep                 v0.11.0 [required by core_kernel]
  - install stdio                   v0.11.0 [required by core, pcre]
  - install ppxlib                  0.2.1   [required by core, ppx_driver]
  - install configurator            v0.11.0 [required by core, pcre]
  - install variantslib             v0.11.0 [required by core_kernel]
  - install ppx_typerep_conv        v0.11.0 [required by ppx_jane]
  - install ppx_sexp_conv           v0.11.1 [required by core_kernel]
  - install ppx_pipebang            v0.11.0 [required by ppx_jane]
  - install ppx_optional            v0.11.0 [required by ppx_jane]
  - install ppx_optcomp             v0.11.0 [required by ppx_jane]
  - install ppx_let                 v0.11.0 [required by ppx_jane]
  - install ppx_js_style            v0.11.0 [required by ppx_base]
  - install ppx_inline_test         v0.11.0 [required by core_kernel]
  - install ppx_here                v0.11.0 [required by ppx_assert, ppx_jane]
  - install ppx_enumerate           v0.11.0 [required by ppx_base]
  - install ppx_driver              v0.11.0 [required by line-up-words]
  - install ppx_compare             v0.11.0 [required by ppx_assert, bin_prot, ppx_base]
  - install fieldslib               v0.11.0 [required by core_extended]
  - install pcre                    7.3.4   [required by line-up-words]
  - install ppx_variants_conv       v0.11.0 [required by bin_prot, ppx_jane]
  - install ppx_custom_printf       v0.11.0 [required by bin_prot, ppx_jane]
  - install ppx_bench               v0.11.0 [required by ppx_jane]
  - install ppx_sexp_value          v0.11.0 [required by ppx_jane]
  - install ppx_sexp_message        v0.11.0 [required by core_kernel]
  - install ppx_fail                v0.11.0 [required by ppx_jane]
  - install ppx_hash                v0.11.0 [required by core_kernel]
  - install ppx_assert              v0.11.0 [required by core]
  - install ppx_fields_conv         v0.11.0 [required by bin_prot, ppx_jane]
  - install ppx_base                v0.11.0 [required by core_kernel]
  - install ppx_expect              v0.11.0 [required by ppx_jane]
  - install bin_prot                v0.11.0 [required by core_extended]
  - install ppx_bin_prot            v0.11.0 [required by ppx_jane]
  - install ppx_jane                v0.11.0 [required by line-up-words]
  - install splittable_random       v0.11.0 [required by core_kernel]
  - install core_kernel             v0.11.1 [required by core_extended, core, patience_diff]
  - install textutils_kernel        v0.11.0 [required by textutils]
  - install re2                     v0.11.0 [required by line-up-words]
  - install patience_diff           v0.11.0 [required by line-up-words]
  - install core                    v0.11.2 [required by line-up-words]
  - install textutils               v0.11.0 [required by core_extended]
  - install core_extended           v0.11.0 [required by line-up-words]
  - install line-up-words           1.0.0
===== 59 to install =====

<><> Gathering sources ><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
[base.v0.11.1] found in cache
[bin_prot.v0.11.0] found in cache
[configurator.v0.11.0] found in cache
[core.v0.11.2] found in cache
[core_extended.v0.11.0] found in cache
[core_kernel.v0.11.1] found in cache
[fieldslib.v0.11.0] found in cache
[jane-street-headers.v0.11.0] found in cache
[line-up-words.1.0.0] found in cache
[num.1.1] found in cache
[ocaml-compiler-libs.v0.11.0] found in cache
[ocaml-migrate-parsetree.1.0.11] found in cache
[octavius.1.2.0] found in cache
[parsexp.v0.11.0] found in cache
[patience_diff.v0.11.0] found in cache
[pcre.7.3.4] found in cache
[ppx_assert.v0.11.0] found in cache
[ppx_base.v0.11.0] found in cache
[ppx_bench.v0.11.0] found in cache
[ppx_bin_prot.v0.11.0] found in cache
[ppx_compare.v0.11.0] found in cache
[ppx_custom_printf.v0.11.0] found in cache
[ppx_derivers.1.0] found in cache
[ppx_driver.v0.11.0] found in cache
[ppx_enumerate.v0.11.0] found in cache
[ppx_expect.v0.11.0] found in cache
[ppx_fail.v0.11.0] found in cache
[ppx_fields_conv.v0.11.0] found in cache
[ppx_hash.v0.11.0] found in cache
[ppx_here.v0.11.0] found in cache
[ppx_inline_test.v0.11.0] found in cache
[ppx_jane.v0.11.0] found in cache
[ppx_js_style.v0.11.0] found in cache
[ppx_let.v0.11.0] found in cache
[ppx_optcomp.v0.11.0] found in cache
[ppx_optional.v0.11.0] found in cache
[ppx_pipebang.v0.11.0] found in cache
[ppx_sexp_conv.v0.11.1] found in cache
[ppx_sexp_message.v0.11.0] found in cache
[ppx_sexp_value.v0.11.0] found in cache
[ppx_typerep_conv.v0.11.0] found in cache
[ppx_variants_conv.v0.11.0] found in cache
[ppxlib.0.2.1] found in cache
[re.1.8.0] found in cache
[re2.v0.11.0] found in cache
[result.1.3] found in cache
[sexplib.v0.11.0] found in cache
[sexplib0.v0.11.0] found in cache
[spawn.v0.12.0] found in cache
[splittable_random.v0.11.0] found in cache
[stdio.v0.11.0] found in cache
[textutils.v0.11.0] found in cache
[textutils_kernel.v0.11.0] found in cache
[typerep.v0.11.0] found in cache
[variantslib.v0.11.0] found in cache

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
[ERROR] The compilation of octavius failed at "/home/opam/.opam/4.08/bin/jbuilder build -p octavius -j 71".
-> installed base-bytes.base
-> installed conf-pkg-config.1.1
-> installed jane-street-headers.v0.11.0
-> installed num.1.1
-> installed conf-libpcre.1
-> installed ocaml-compiler-libs.v0.11.0
-> installed ppx_derivers.1.0
-> installed result.1.3
-> installed seq.base
[ERROR] The compilation of ocaml-migrate-parsetree failed at "/home/opam/.opam/4.08/bin/jbuilder build -p ocaml-migrate-parsetree -j 71".
-> installed sexplib0.v0.11.0
-> installed parsexp.v0.11.0
[ERROR] The compilation of base failed at "/home/opam/.opam/4.08/bin/jbuilder build -p base -j 71".
-> installed re.1.8.0
-> installed spawn.v0.12.0
-> installed sexplib.v0.11.0

#=== ERROR while compiling octavius.1.2.0 =====================================#
# context              2.0.0 | linux/x86_64 | ocaml-variants.4.08.0+trunk | git+file:///home/opam/opam-repository
# path                 ~/.opam/4.08/.opam-switch/build/octavius.1.2.0
# command              ~/.opam/4.08/bin/jbuilder build -p octavius -j 71
# exit-code            1
# env-file             ~/.opam/log/octavius-11-848e1a.env
# output-file          ~/.opam/log/octavius-11-848e1a.out
### output ###
#       ocamlc test/.main.eobjs/main.{cmi,cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -g -bin-annot -I test/.main.eobjs -I /home/opam/.opam/4.08/lib/ocaml/compiler-libs -I src/.octavius.objs -no-alias-deps -o test/.main.eobjs/main.cmo -c -impl test/main.ml)
# File "test/main.ml", line 25, characters 14-26:
# Error: Unbound value report_error


#=== ERROR while compiling ocaml-migrate-parsetree.1.0.11 =====================#
# context              2.0.0 | linux/x86_64 | ocaml-variants.4.08.0+trunk | git+file:///home/opam/opam-repository
# path                 ~/.opam/4.08/.opam-switch/build/ocaml-migrate-parsetree.1.0.11
# command              ~/.opam/4.08/bin/jbuilder build -p ocaml-migrate-parsetree -j 71
# exit-code            1
# env-file             ~/.opam/log/ocaml-migrate-parsetree-11-c762fa.env
# output-file          ~/.opam/log/ocaml-migrate-parsetree-11-c762fa.out
### output ###
#        ocaml src/ast-version,src/compiler-functions-file (exit 1)
# (cd _build/default/src && /home/opam/.opam/4.08/bin/ocaml config/gen.ml 4.08.0+dev0-2018-04-09)
# Unkown OCaml version 4.08.0+dev0-2018-04-09


#=== ERROR while compiling base.v0.11.1 =======================================#
# context              2.0.0 | linux/x86_64 | ocaml-variants.4.08.0+trunk | git+file:///home/opam/opam-repository
# path                 ~/.opam/4.08/.opam-switch/build/base.v0.11.1
# command              ~/.opam/4.08/bin/jbuilder build -p base -j 71
# exit-code            1
# env-file             ~/.opam/log/base-11-54cf48.env
# output-file          ~/.opam/log/base-11-54cf48.out
### output ###
#       ocamlc shadow-stdlib/src/.shadow_stdlib.objs/shadow_stdlib.{cmi,cmti}
# File "shadow-stdlib/src/shadow_stdlib.mli", line 28, characters 0-279:
# Warning 53: the "deprecated" attribute cannot appear in this context
# File "shadow-stdlib/src/shadow_stdlib.mli", line 1399, characters 0-401:
# Warning 53: the "deprecated" attribute cannot appear in this context
#       ocamlc src/.base.objs/base__Import0.{cmi,cmo,cmt}
# File "src/import0.ml", line 7, characters 6-394:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/import0.ml", line 126, characters 22-37:
# Warning 3: deprecated: module Caml.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/import0.ml", line 128, characters 10-25:
# Warning 3: deprecated: module Caml.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/import0.ml", line 172, characters 12-26:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/import0.ml", line 173, characters 12-26:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#       ocamlc src/.base.objs/base__Comparator.{cmo,cmt}
# File "src/comparator.ml", line 67, characters 20-38:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#       ocamlc src/.base.objs/base__Exn.{cmo,cmt}
# File "src/exn.ml", line 120, characters 28-49:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#       ocamlc src/.base.objs/base__Result.{cmi,cmti}
# File "src/result.mli", line 19, characters 33-50:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#     ocamlopt src/.base.objs/base__Import0.{cmx,o}
# File "src/import0.ml", line 7, characters 6-394:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/import0.ml", line 126, characters 22-37:
# Warning 3: deprecated: module Caml.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/import0.ml", line 128, characters 10-25:
# Warning 3: deprecated: module Caml.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/import0.ml", line 172, characters 12-26:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/import0.ml", line 173, characters 12-26:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#       ocamlc src/.base.objs/base__Ordered_collection_common.{cmi,cmti}
# File "src/ordered_collection_common.mli", line 28, characters 80-88:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Result.{cmo,cmt}
# File "src/result.ml", line 3, characters 27-44:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#       ocamlc src/.base.objs/base__Ordered_collection_common.{cmo,cmt}
# File "src/ordered_collection_common.ml", line 37, characters 6-15:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/ordered_collection_common.ml", line 38, characters 29-41:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Container_intf.{cmi,cmo,cmt}
# File "src/container_intf.ml", line 47, characters 40-48:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 48, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 118, characters 40-48:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 119, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 188, characters 39-47:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 189, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 256, characters 39-47:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 257, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 319, characters 43-51:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 320, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 353, characters 43-51:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 354, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 446, characters 31-39:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 448, characters 16-24:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Container.{cmo,cmt}
# File "src/container.ml", line 23, characters 4-13:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container.ml", line 25, characters 8-17:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Or_error.{cmi,cmti}
# File "src/or_error.mli", line 12, characters 26-34:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.mli", line 62, characters 30-38:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Or_error.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Or_error.cmo -c -impl src/or_error.ml)
# File "src/or_error.ml", line 3, characters 26-34:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 7, characters 18-32:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 16, characters 14-32:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 16, characters 14-32:
# Error: Unbound value Result.hash_fold_t
#       ocamlc src/.base.objs/base__Validate.{cmi,cmti}
# File "src/validate.mli", line 140, characters 38-46:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Option_array.{cmi,cmti}
# File "src/option_array.mli", line 94, characters 31-39:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/option_array.mli", line 95, characters 23-31:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
#       ocamlc src/.base.objs/base__Float0.{cmi,cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -no-alias-deps -open Base__ -o src/.base.objs/base__Float0.cmo -c -impl src/float0.ml)
# File "src/float0.ml", line 31, characters 2-18:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/float0.ml", line 31, characters 2-18:
# Error: Unbound value Option.value_exn
#       ocamlc src/.base.objs/base__Option_array.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Option_array.cmo -c -impl src/option_array.ml)
# File "src/option_array.ml", line 99, characters 32-38:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/option_array.ml", line 99, characters 32-38:
# Error: Signature mismatch:
#        ...
#        The value `sexp_of_t' is required but not provided
#        File "src/sexpable.mli", line 21, characters 4-94:
#          Expected declaration
#        The value `t_of_sexp' is required but not provided
#        File "src/sexpable.mli", line 19, characters 4-94:
#          Expected declaration
#       ocamlc src/.base.objs/base__Sequence.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Sequence.cmo -c -impl src/sequence.ml)
# File "src/sequence.ml", line 977, characters 18-31:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/sequence.ml", line 977, characters 18-31:
# Error: Unbound value Result.return
#       ocamlc src/.base.objs/base__Either.{cmo,cmt}
# File "src/either.ml", line 231, characters 37-48:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
#       ocamlc src/.base.objs/base__Array.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Array.cmo -c -impl src/array.ml)
# File "src/array.ml", line 523, characters 16-26:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/array.ml", line 523, characters 61-79:
# Error: The function applied to this argument has type 'a option -> 'b option
# This argument cannot be applied with label ~f
#       ocamlc src/.base.objs/base__Bool.{cmo,cmt}
# File "src/bool.ml", line 62, characters 10-24:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/bool.ml", line 63, characters 10-24:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#     ocamlopt src/.base.objs/base__Comparator.{cmx,o}
# File "src/comparator.ml", line 67, characters 20-38:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#       ocamlc src/.base.objs/base__Int_conversions.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Int_conversions.cmo -c -impl src/int_conversions.ml)
# File "src/int_conversions.ml", line 345, characters 12-27:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/int_conversions.ml", line 345, characters 12-27:
# Error: Unbound value Option.try_with
#       ocamlc src/.base.objs/base__Type_equal.{cmo,cmt}
# File "src/type_equal.ml", line 179, characters 19-33:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
#     ocamlopt src/.base.objs/base__Exn.{cmx,o}
# File "src/exn.ml", line 120, characters 28-49:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#       ocamlc src/.base.objs/base__Hash_set.{cmo,cmt}
# File "src/hash_set.ml", line 41, characters 6-15:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/hash_set.ml", line 52, characters 6-15:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Hashtbl.{cmo,cmt}
# File "src/hashtbl.ml", line 373, characters 5-19:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/hashtbl.ml", line 391, characters 17-29:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/hashtbl.ml", line 476, characters 13-22:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/hashtbl.ml", line 484, characters 4-13:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/hashtbl.ml", line 485, characters 4-16:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/hashtbl.ml", line 536, characters 13-22:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#     ocamlopt src/.base.objs/base__Result.{cmx,o}
# File "src/result.ml", line 3, characters 27-44:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
#     ocamlopt src/.base.objs/base__Ordered_collection_common.{cmx,o}
# File "src/ordered_collection_common.ml", line 37, characters 6-15:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/ordered_collection_common.ml", line 38, characters 29-41:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#     ocamlopt src/.base.objs/base__Container_intf.{cmx,o}
# File "src/container_intf.ml", line 47, characters 40-48:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 48, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 118, characters 40-48:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 119, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 188, characters 39-47:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 189, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 256, characters 39-47:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 257, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 319, characters 43-51:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 320, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 353, characters 43-51:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 354, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 446, characters 31-39:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container_intf.ml", line 448, characters 16-24:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#       ocamlc src/.base.objs/base__Map.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Map.cmo -c -impl src/map.ml)
# File "src/map.ml", line 129, characters 22-31:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/map.ml", line 141, characters 15-30:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/map.ml", line 144, characters 8-17:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/map.ml", line 414, characters 23-35:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/map.ml", line 431, characters 29-43:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/map.ml", line 802, characters 15-30:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/map.ml", line 817, characters 17-32:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/map.ml", line 868, characters 17-32:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/map.ml", line 925, characters 14-25:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/map.ml", line 926, characters 75-76:
# Error: This expression has type
#          none:(init:'a -> f:(('b, 'c) t -> 'b -> ('b, 'c) t) -> 'd) ->
#          some:('e -> init:'a -> f:(('b, 'c) t -> 'b -> ('b, 'c) t) -> 'd) ->
#          'd
#        but an expression was expected of type ('b, 'f) t
#       ocamlc src/.base.objs/base__Set_intf.{cmi,cmo,cmt}
# File "src/set_intf.ml", line 1001, characters 39-47:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/set_intf.ml", line 1002, characters 20-28:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#     ocamlopt src/.base.objs/base__Container.{cmx,o}
# File "src/container.ml", line 23, characters 4-13:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/container.ml", line 25, characters 8-17:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
#     ocamlopt src/.base.objs/base__Sequence.{cmx,o} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlopt.opt -w -40 -safe-string -g -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Sequence.cmx -c -impl src/sequence.ml)
# File "src/sequence.ml", line 977, characters 18-31:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/sequence.ml", line 977, characters 18-31:
# Error: Unbound value Result.return
#       ocamlc src/.base.objs/base__Set.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Set.cmo -c -impl src/set.ml)
# File "src/set.ml", line 135, characters 22-31:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/set.ml", line 147, characters 15-30:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/set.ml", line 150, characters 8-17:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/set.ml", line 400, characters 16-34:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/set.ml", line 574, characters 17-32:
# Warning 3: deprecated: module Stdlib.Pervasives
# Use Stdlib instead.
# 
# If you need to stay compatible with OCaml < 4.07, you can use the 
# stdlib-shims library: https://github.com/ocaml/stdlib-shims
# File "src/set.ml", line 630, characters 14-25:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/set.ml", line 631, characters 70-71:
# Error: This expression has type
#          none:(init:'a -> f:('b t -> 'b -> 'b t) -> 'c) ->
#          some:('d -> init:'a -> f:('b t -> 'b -> 'b t) -> 'c) -> 'c
#        but an expression was expected of type 'b t
#       ocamlc src/.base.objs/base__String.{cmo,cmt} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlc.opt -w -40 -safe-string -g -bin-annot -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__String.cmo -c -impl src/string.ml)
# File "src/string.ml", line 349, characters 2-16:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/string.ml", line 1152, characters 4-14:
# Warning 3: deprecated: module Base__.Import.Option
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Option instead
# File "src/string.ml", line 1152, characters 46-71:
# Error: The function applied to this argument has type 'a option -> 'b option
# This argument cannot be applied with label ~f
#     ocamlopt src/.base.objs/base__Or_error.{cmx,o} (exit 2)
# (cd _build/default && /home/opam/.opam/4.08/bin/ocamlopt.opt -w -40 -safe-string -g -I src/.base.objs -I /home/opam/.opam/4.08/lib/sexplib0 -I compiler-stdlib/src/.caml.objs -I shadow-stdlib/src/.shadow_stdlib.objs -intf-suffix .ml -no-alias-deps -open Base__ -o src/.base.objs/base__Or_error.cmx -c -impl src/or_error.ml)
# File "src/or_error.ml", line 3, characters 26-34:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 7, characters 18-32:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 16, characters 14-32:
# Warning 3: deprecated: module Base__.Import.Result
# [2016-09] this element comes from the stdlib distributed with OCaml.
# Refering to the stdlib directly is discouraged by Base. You should either
# use the equivalent functionality offered by Base, or if you really want to
# refer to the stdlib, use Caml.Result instead
# File "src/or_error.ml", line 16, characters 14-32:
# Error: Unbound value Result.hash_fold_t



<><> Error report <><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
+- The following actions failed
| - build base                    v0.11.1
| - build ocaml-migrate-parsetree 1.0.11
| - build octavius                1.2.0
+- 
+- The following changes have been performed (the rest was aborted)
| - install base-bytes          base
| - install conf-libpcre        1
| - install conf-pkg-config     1.1
| - install jane-street-headers v0.11.0
| - install num                 1.1
| - install ocaml-compiler-libs v0.11.0
| - install parsexp             v0.11.0
| - install ppx_derivers        1.0
| - install re                  1.8.0
| - install result              1.3
| - install seq                 base
| - install sexplib             v0.11.0
| - install sexplib0            v0.11.0
| - install spawn               v0.12.0
+- 
# Run eval $(opam env) to update the current shell environment

The former state can be restored with:
    opam switch import "/home/opam/.opam/4.08/.opam-switch/backup/state-20180901234356.export"
31 1535845428 1535845455